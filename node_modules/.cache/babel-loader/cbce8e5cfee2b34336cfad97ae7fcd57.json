{"ast":null,"code":"var _jsxFileName = \"/home/jd/git/CrowdRec/src/components/BandPaginator.js\";\nimport React, { Component } from 'react';\nimport Pagination from 'react-bootstrap/Pagination';\nimport { Card } from 'react-bootstrap';\n\nclass BandPaginator extends Component {\n  constructor(props) {\n    super(props);\n    let elements = [];\n    let pages = [];\n\n    for (let i = 0; i < this.props.bands.length; i++) {\n      elements.push( /*#__PURE__*/React.createElement(Card, {\n        value: this.props.bands[i],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 27\n        }\n      }));\n\n      if (i % this.props.perPage === 0) {\n        pages.push( /*#__PURE__*/React.createElement(Pagination.Item, {\n          key: i / this.props.perPage + 1,\n          onClick: this.setState({\n            page: i / this.props.perPage + 1\n          }),\n          active: this.state.page === i / this.props.perPage + 1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 28\n          }\n        }, i / this.props.perPage + 1));\n      }\n    }\n\n    this.state({\n      page: 1,\n      pgs: pages,\n      elems: elements\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragement, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, this.state.elems.slice(this.state.page * this.state.perPage, (this.state.page + 1) * this.state.perPage), this.state.pages);\n  }\n\n}\n\nexport default BandPaginator;","map":{"version":3,"sources":["/home/jd/git/CrowdRec/src/components/BandPaginator.js"],"names":["React","Component","Pagination","Card","BandPaginator","constructor","props","elements","pages","i","bands","length","push","perPage","setState","page","state","pgs","elems","render","slice"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AAClCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,MAArC,EAA6CF,CAAC,EAA9C,EAAkD;AAC9CF,MAAAA,QAAQ,CAACK,IAAT,eAAc,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWI,KAAX,CAAiBD,CAAjB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;;AACA,UAAIA,CAAC,GAAG,KAAKH,KAAL,CAAWO,OAAf,KAA2B,CAA/B,EAAkC;AAC9BL,QAAAA,KAAK,CAACI,IAAN,eAAW,oBAAC,UAAD,CAAY,IAAZ;AACP,UAAA,GAAG,EAAGH,CAAC,GAAG,KAAKH,KAAL,CAAWO,OAAhB,GAA2B,CADzB;AAEP,UAAA,OAAO,EAAE,KAAKC,QAAL,CAAc;AAACC,YAAAA,IAAI,EAAEN,CAAC,GAAI,KAAKH,KAAL,CAAWO,OAAhB,GAA2B;AAAlC,WAAd,CAFF;AAGP,UAAA,MAAM,EAAE,KAAKG,KAAL,CAAWD,IAAX,KAAoBN,CAAC,GAAI,KAAKH,KAAL,CAAWO,OAAhB,GAA2B,CAHhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGqDJ,CAAC,GAAG,KAAKH,KAAL,CAAWO,OAAhB,GAA2B,CAH/E,CAAX;AAIH;AACJ;;AAED,SAAKG,KAAL,CAAW;AAACD,MAAAA,IAAI,EAAE,CAAP;AAAUE,MAAAA,GAAG,EAAET,KAAf;AAAsBU,MAAAA,KAAK,EAAEX;AAA7B,KAAX;AACH;;AAEDY,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKH,KAAL,CAAWE,KAAX,CAAiBE,KAAjB,CAAuB,KAAKJ,KAAL,CAAWD,IAAX,GAAgB,KAAKC,KAAL,CAAWH,OAAlD,EAA2D,CAAC,KAAKG,KAAL,CAAWD,IAAX,GAAgB,CAAjB,IAAoB,KAAKC,KAAL,CAAWH,OAA1F,CADL,EAEK,KAAKG,KAAL,CAAWR,KAFhB,CADJ;AAMH;;AAzBiC;;AA6BtC,eAAeJ,aAAf","sourcesContent":["import React, {Component} from 'react';\nimport Pagination from 'react-bootstrap/Pagination';\nimport { Card } from 'react-bootstrap';\n\nclass BandPaginator extends Component {\n    constructor(props) {\n        super(props);\n        let elements = [];\n        let pages = [];\n        for (let i = 0; i < this.props.bands.length; i++) {\n            elements.push(<Card value={this.props.bands[i]} />);    \n            if (i % this.props.perPage === 0) {\n                pages.push(<Pagination.Item \n                    key={(i / this.props.perPage) + 1}\n                    onClick={this.setState({page: i / (this.props.perPage) + 1})} \n                    active={this.state.page === i / (this.props.perPage) + 1}>{(i / this.props.perPage) + 1}</Pagination.Item>);\n            }\n        }\n\n        this.state({page: 1, pgs: pages, elems: elements});\n    }\n\n    render() {\n        return (\n            <React.Fragement>\n                {this.state.elems.slice(this.state.page*this.state.perPage, (this.state.page+1)*this.state.perPage)}\n                {this.state.pages}\n            </React.Fragement>\n        )\n    }\n\n}\n\nexport default BandPaginator;"]},"metadata":{},"sourceType":"module"}