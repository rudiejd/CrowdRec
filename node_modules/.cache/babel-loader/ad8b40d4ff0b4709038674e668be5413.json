{"ast":null,"code":"import _slicedToArray from\"/home/jd/git/CrowdRec/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _createForOfIteratorHelper from\"/home/jd/git/CrowdRec/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _regeneratorRuntime from\"/home/jd/git/CrowdRec/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/jd/git/CrowdRec/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/home/jd/git/CrowdRec/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/jd/git/CrowdRec/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/jd/git/CrowdRec/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/jd/git/CrowdRec/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/jd/git/CrowdRec/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/jd/git/CrowdRec/node_modules/@babel/runtime/helpers/esm/createSuper\";import{withRouter}from'react-router-dom';import React,{Component}from'react';import{Form,Button,Alert,Row}from'react-bootstrap';import{connect}from'react-redux';import SpotifyWebApi from'spotify-web-api-js';import Text from'./Text';import BandPaginator from'./BandPaginator';var spotify=new SpotifyWebApi();var SpotifyForm=/*#__PURE__*/function(_Component){_inherits(SpotifyForm,_Component);var _super=_createSuper(SpotifyForm);function SpotifyForm(props){var _this;_classCallCheck(this,SpotifyForm);_this=_super.call(this,props);_this.state={resultReceived:false,recOutput:{},recItems:[],errorStatus:undefined};_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));_this.handleSubmit=_this.handleSubmit.bind(_assertThisInitialized(_this));_this.processResults=_this.processResults.bind(_assertThisInitialized(_this));_this.getRecs=_this.getRecs.bind(_assertThisInitialized(_this));_this.createPlaylist=_this.createPlaylist.bind(_assertThisInitialized(_this));_this.countTracks=_this.countTracks.bind(_assertThisInitialized(_this));_this.getRandomTrack=_this.getRandomTrack.bind(_assertThisInitialized(_this));return _this;}/**\n   * Runs after component mounts,  decodes the access token if applicable\n   */_createClass(SpotifyForm,[{key:\"componentDidMount\",value:function componentDidMount(){var hash=window.location.hash.substring(1).split('&').reduce(function(initial,item){if(item){var parts=item.split('=');initial[parts[0]]=decodeURIComponent(parts[1]);}return initial;},{});var access_token=hash.access_token;this.props.change({'name':'token','value':access_token});}/**\n     * Handle change in the artist value\n     * @param {Object} event Event incurred by change\n     */},{key:\"handleChange\",value:function handleChange(event){this.setState({resultReceived:false,alert:undefined});var target=event.target;var value=target.value;var name=target.name;this.setState(_defineProperty({},name,value));this.render();}/**\n     * Handle HTTP errors encountered by updating the state with an error message\n     * @param {Object} err\n     */},{key:\"handleError\",value:function(){var _handleError=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(err){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=err.status;_context.next=_context.t0===401?3:_context.t0===429?5:_context.t0===501?7:9;break;case 3:this.setState({errorStatus:'You don\\'t seem to be authorized. Try clicking the button above to authorize with Spotify and try again.',resultReceived:false});return _context.abrupt(\"break\",10);case 5:this.setState({errorStatus:'Looks like we\\'re making too many requests to Spotify right now. Wait a little bit and try that again.'});return _context.abrupt(\"break\",10);case 7:this.setState({errorStatus:'Spotify\\'s servers are fried! Check out their status, then try again when they\\'re back up'});return _context.abrupt(\"break\",10);case 9:console.log(err);case 10:case\"end\":return _context.stop();}}},_callee,this);}));function handleError(_x){return _handleError.apply(this,arguments);}return handleError;}()/**\n     * Checks whether a playlist contains is valid. Criteria for validity are:\n     *  - playlist attributes are well-defined (no null properties)\n     *  - playlist must contain the artist for which user is searching\n     * @param {string} id ID of playlist\n     * @param {*} artist Name of artist\n     * @return {Promise<boolean>} true if playlist is valid, false otherwise\n     */},{key:\"isPlaylistValid\",value:function(){var _isPlaylistValid=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id,artist){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:return _context2.abrupt(\"return\",spotify.getPlaylistTracks(id).then(function(pt){if(pt===undefined){return;}var _iterator=_createForOfIteratorHelper(pt.items),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var track=_step.value;if(track===undefined||track.track===null){continue;}else if(track.track.artists[0].name===artist){return true;}}}catch(err){_iterator.e(err);}finally{_iterator.f();}return false;}));case 1:case\"end\":return _context2.stop();}}},_callee2);}));function isPlaylistValid(_x2,_x3){return _isPlaylistValid.apply(this,arguments);}return isPlaylistValid;}()/**\n     * Asynchronously counts tracks by a given artist in a given playlist\n     * @param {string} id ID of the playlist\n     * @param {string} name Name of the artist\n     * @param {object} output Reference to output object which should be modified\n     * @return {Promise}\n     */},{key:\"countTracks\",value:function(){var _countTracks=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id,name,output){var _this2=this;var MAX_SONGS;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:MAX_SONGS=200;return _context3.abrupt(\"return\",spotify.getPlaylistTracks(id).then(function(pt){var curSongs=0;var _iterator2=_createForOfIteratorHelper(pt.items),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var track=_step2.value;if(curSongs>MAX_SONGS)break;if(track.track!=null&&track.track.artists[0].name!==name&&track.track.artists[0].name!==''){if(track.track.artists[0].name in output){output[track.track.artists[0].name]++;}else{output[track.track.artists[0].name]=1;}}curSongs++;}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}}).catch(function(err){if(err.status===429){setTimeout(_this2.countTracks(id,name,output),500);}_this2.handleError(err);}));case 2:case\"end\":return _context3.stop();}}},_callee3);}));function countTracks(_x4,_x5,_x6){return _countTracks.apply(this,arguments);}return countTracks;}()/**\n     * Gets recommendations for a specific artist and outputs recOutput value in state\n     * @param {string} name The name of the artist\n     * @return {Promise}\n     * /\n    * */},{key:\"getRecs\",value:function(){var _getRecs=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(name){var _this3=this;var output,promises;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:output={};promises=[];_context5.next=4;return spotify.searchPlaylists(name,{limit:1}).then(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(searchTotal){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return spotify.searchPlaylists(name,{limit:50,offset:Math.floor(Math.random()*(searchTotal.playlists.total/50))}).then(function(res){var _iterator3=_createForOfIteratorHelper(res.playlists.items),_step3;try{var _loop=function _loop(){var i=_step3.value;promises.push(_this3.isPlaylistValid(i.id,name).then(function(valid){return valid?_this3.countTracks(i.id,name,output):null;}));};for(_iterator3.s();!(_step3=_iterator3.n()).done;){_loop();}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}});case 2:return _context4.abrupt(\"return\",_context4.sent);case 3:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x8){return _ref.apply(this,arguments);};}()).catch(function(err){_this3.handleError(err);});case 4:return _context5.abrupt(\"return\",Promise.all(promises).then(function(){return _this3.setState({recOutput:_this3.processResults(output),artist:name});}));case 5:case\"end\":return _context5.stop();}}},_callee5);}));function getRecs(_x7){return _getRecs.apply(this,arguments);}return getRecs;}()/**\n     * Processesresults from our query to spotify, removing entries beyond a certain threshhold then sorting the object.\n     * @return Results\n     */},{key:\"processResults\",value:function processResults(input){var _this4=this;var processed={};for(var key in input){if(input[key]>10){processed[key]=input[key];}}var sorted=Object.fromEntries(Object.entries(processed).sort(function(_ref2,_ref3){var _ref4=_slicedToArray(_ref2,2),a=_ref4[1];var _ref5=_slicedToArray(_ref3,2),b=_ref5[1];return b-a;}));var output=[];for(var _key in sorted){output.push(_key);}this.setState({recItems:output});fetch(\"https://api64.ipify.org?format=json\").then(function(response){return response.json();},\"jsonp\").then(function(res){fetch(\"http://rudiejd.aws.csi.miamioh.edu/final.php?method=logRec&artist=\".concat(_this4.state.artist,\"&recommendations=\").concat(output.join(','),\"&ip=\").concat(res.ip),{method:'POST'});}).catch(function(err){return console.log(err);});return sorted;}/**\n   * Gets a random track for a given band. \n   * @param {string} band \n   */},{key:\"getRandomTrack\",value:function getRandomTrack(band){var _this5=this;return spotify.searchTracks(band,{limit:1}).then(function(searchTotal){return spotify.searchTracks(band,{limit:50});}).then(function(tracks){if(tracks===undefined||tracks.tracks===null){return _this5.getRandomTrack(band);}// filter so we only get songs by the artist\nvar filteredByBand=tracks.tracks.items.filter(function(song){return song.artists[0].name===band;});return filteredByBand[Math.floor(Math.random()*filteredByBand.length)];}).catch(function(err){if(err.status===429){setTimeout(function(){return console.log(\"waiting to prevent 429...\");},500);return _this5.getRandomTrack(band);}else{_this5.handleError(err);}});}/**\n     * Creates playlist with one random song from each output artist\n     */},{key:\"createPlaylist\",value:function createPlaylist(){var _this6=this;var promises=[];var trackUris=[];Object.keys(this.state.recOutput).forEach(/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(artist){return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:promises.push(_this6.getRandomTrack(artist).then(function(track){return trackUris.push(track.uri);}).catch(function(err){return _this6.handleError(err);}));case 1:case\"end\":return _context6.stop();}}},_callee6);}));return function(_x9){return _ref6.apply(this,arguments);};}());// this.setState({playlistUrl: playlist.external_urls[\"spotify\"]})\nPromise.all(promises).then(function(){if(_this6.state.errorStatus===undefined){var addPromises=[];spotify.getMe().then(function(me){return spotify.createPlaylist(me.id,{name:\"Recommendations Based on  \".concat(_this6.state.artist),public:false});}).then(function(playlist){trackUris.forEach(function(uri){return addPromises.push(spotify.addTracksToPlaylist(playlist.id,[uri]).catch(function(err){if(err.status===429){setTimeout(function(){return console.log(\"waiting to prevent 429...\");},500);return spotify.addTracksToPlaylist(playlist.id,[uri]);}else{_this6.handleError(err);}}));});_this6.setState({playlistUrl:playlist.external_urls.spotify});});Promise.all(addPromises).then(function(){return _this6.setState({playlistCreated:true});});}});}/**\n     *  Handles submission of Artist form\n     * @param {Object} e Submission event\n     * \n     */},{key:\"handleSubmit\",value:function handleSubmit(e){var _this7=this;e.preventDefault();spotify.setAccessToken(this.props.vars.token);this.setState({errorStatus:undefined,alert:undefined});spotify.searchArtists(this.state.artist).then(/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(res){return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.next=2;return _this7.getRecs(res.artists.items[0].name);case 2:return _context7.abrupt(\"return\",_context7.sent);case 3:case\"end\":return _context7.stop();}}},_callee7);}));return function(_x10){return _ref7.apply(this,arguments);};}()).then(function(){// Only show recommendations if they're non empty\nif(_this7.state.errorStatus===undefined){if(Object.keys(_this7.state.recOutput).length===0){_this7.setState({errorStatus:'Unfortunately, we could not find any recommendations for that artist at this time. Feel free to try another one, or try again since recommendations are randomly generated.'});}else{_this7.setState({resultReceived:true});}}}).catch(function(err){if(err.status===429){setTimeout(function(){return console.log(\"waiting to prevent 429...\");},500);return _this7.handleSubmit(e);}_this7.handleError(err);});}/**\n     * Render the component\n     * @return JSX\n     */},{key:\"render\",value:function render(){var _this8=this;return/*#__PURE__*/React.createElement(React.Fragment,null,this.state.alert!==undefined?/*#__PURE__*/React.createElement(Alert,{className:\"alert-success\"},/*#__PURE__*/React.createElement(Text,null,this.state.alert,/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"a\",{href:this.state.playlistUrl},this.state.playlistUrl))):null,this.state.errorStatus!==undefined?/*#__PURE__*/React.createElement(Alert,{className:\"alert-danger\"},/*#__PURE__*/React.createElement(Text,null,this.state.errorStatus)):null,this.state.resultReceived?null:/*#__PURE__*/React.createElement(\"div\",{className:\"p-lg-5\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"mb-5 text-center\"},\"Enter artist's name for recommendations\"),/*#__PURE__*/React.createElement(Form,{onSubmit:this.handleSubmit},/*#__PURE__*/React.createElement(Form.Group,{className:\"d-flex justify-content-center\"},/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:\"Iron Maiden\",name:\"artist\",className:\"w-50\",onChange:this.handleChange,required:true})),/*#__PURE__*/React.createElement(Form.Group,{className:\"d-flex justify-content-center\"},/*#__PURE__*/React.createElement(Form.Control,{type:\"submit\",className:\"w-25 bg-primary text-light\",value:\"Go!\"})))),/*#__PURE__*/React.createElement(\"div\",null,this.state.resultReceived?/*#__PURE__*/React.createElement(\"h1\",{className:\"mb-2 text-center\"},\"Since you like \",this.state.artist,\", you might like:\"):null,this.state.resultReceived?/*#__PURE__*/React.createElement(BandPaginator,{bands:this.state.recItems,perPage:5}):null,/*#__PURE__*/React.createElement(Row,{className:\"d-flex justify-content-center\"},this.state.resultReceived?this.state.playlistCreated?/*#__PURE__*/React.createElement(Button,{className:\"bg-success mt-3\",onClick:function onClick(){window.location.href=_this8.state.playlistUrl;}},\" Playlist created! Click to open it up.\"):/*#__PURE__*/React.createElement(Button,{className:\"mt-3\",onClick:this.createPlaylist},\"Create a playlist with songs from these artists\"):null)));}}]);return SpotifyForm;}(Component);// mapping our redux state to box props\nvar mapStateToProps=function mapStateToProps(state){return{vars:state.vars};};// mapping the dispatches from our reducer to box props\nvar mapDispatchToProps=function mapDispatchToProps(dispatch){return{change:function change(vName){return dispatch({type:'CHANGE',name:vName});}};};export default withRouter(connect(mapStateToProps,mapDispatchToProps)(SpotifyForm));","map":{"version":3,"sources":["/home/jd/git/CrowdRec/src/components/SpotifyForm.js"],"names":["withRouter","React","Component","Form","Button","Alert","Row","connect","SpotifyWebApi","Text","BandPaginator","spotify","SpotifyForm","props","state","resultReceived","recOutput","recItems","errorStatus","undefined","handleChange","bind","handleSubmit","processResults","getRecs","createPlaylist","countTracks","getRandomTrack","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","access_token","change","event","setState","alert","target","value","name","render","err","status","console","log","id","artist","getPlaylistTracks","then","pt","items","track","artists","output","MAX_SONGS","curSongs","catch","setTimeout","handleError","promises","searchPlaylists","limit","searchTotal","offset","Math","floor","random","playlists","total","res","i","push","isPlaylistValid","valid","Promise","all","input","processed","key","sorted","Object","fromEntries","entries","sort","a","b","fetch","response","json","join","ip","method","band","searchTracks","tracks","filteredByBand","filter","song","length","trackUris","keys","forEach","uri","addPromises","getMe","me","public","playlist","addTracksToPlaylist","playlistUrl","external_urls","playlistCreated","e","preventDefault","setAccessToken","vars","token","searchArtists","href","mapStateToProps","mapDispatchToProps","dispatch","vName","type"],"mappings":"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","sourcesContent":["import {withRouter} from 'react-router-dom';\nimport React, {Component} from 'react';\nimport {\n   Form, Button, Alert, Row\n} from 'react-bootstrap';\nimport {connect} from 'react-redux';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Text from './Text';\nimport BandPaginator from './BandPaginator';\n\nconst spotify = new SpotifyWebApi();\n\n\nclass SpotifyForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {resultReceived: false, recOutput: {}, recItems: [], errorStatus: undefined};\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.processResults = this.processResults.bind(this);\n    this.getRecs = this.getRecs.bind(this);\n    this.createPlaylist = this.createPlaylist.bind(this);\n    this.countTracks = this.countTracks.bind(this);\n    this.getRandomTrack = this.getRandomTrack.bind(this);\n  }\n\n  /**\n   * Runs after component mounts,  decodes the access token if applicable\n   */\n  componentDidMount() {\n    const hash = window.location.hash\n    .substring(1)\n    .split('&')\n    .reduce(function (initial, item) {\n      if (item) {\n        var parts = item.split('=');\n        initial[parts[0]] = decodeURIComponent(parts[1]);\n      }\n      return initial;\n    }, {});\n\n    const access_token = hash.access_token;\n    this.props.change({'name': 'token', 'value': access_token})\n  }\n\n  /**\n     * Handle change in the artist value\n     * @param {Object} event Event incurred by change\n     */\n  handleChange(event) {\n    this.setState({resultReceived: false, alert: undefined});\n    const {target} = event;\n    const {value} = target;\n    const {name} = target;\n    this.setState({[name]: value});\n    this.render();\n  }\n\n  /**\n     * Handle HTTP errors encountered by updating the state with an error message\n     * @param {Object} err\n     */\n  async handleError(err) {\n    switch (err.status) {\n      case 401:\n        this.setState({errorStatus: 'You don\\'t seem to be authorized. Try clicking the button above to authorize with Spotify and try again.', resultReceived: false});\n        break;\n      case 429:\n        this.setState({errorStatus: 'Looks like we\\'re making too many requests to Spotify right now. Wait a little bit and try that again.'});\n        break;\n      case 501:\n        this.setState({errorStatus: 'Spotify\\'s servers are fried! Check out their status, then try again when they\\'re back up'});\n        break;\n      default:\n        console.log(err);\n    }\n  }\n\n  /**\n     * Checks whether a playlist contains is valid. Criteria for validity are:\n     *  - playlist attributes are well-defined (no null properties)\n     *  - playlist must contain the artist for which user is searching\n     * @param {string} id ID of playlist\n     * @param {*} artist Name of artist\n     * @return {Promise<boolean>} true if playlist is valid, false otherwise\n     */\n  async isPlaylistValid(id, artist) {\n    return spotify.getPlaylistTracks(id)\n        .then(\n            (pt) => {\n              if (pt === undefined) {\n                return;\n              }\n              for (const track of pt.items) {\n                if (track === undefined || track.track === null) {\n                  continue;\n                } else if (track.track.artists[0].name === artist) {\n                  return true;\n                }\n              }\n              return false;\n            },\n        );\n  }\n\n  /**\n     * Asynchronously counts tracks by a given artist in a given playlist\n     * @param {string} id ID of the playlist\n     * @param {string} name Name of the artist\n     * @param {object} output Reference to output object which should be modified\n     * @return {Promise}\n     */\n  async countTracks(id, name, output) {\n    const MAX_SONGS = 200;\n    return spotify.getPlaylistTracks(id).then(\n        (pt) => {\n          let curSongs = 0;\n          for (const track of pt.items) {\n            if (curSongs > MAX_SONGS) break;\n            if (track.track != null &&\n                        track.track.artists[0].name !== name &&\n                        track.track.artists[0].name !== '') {\n              if (track.track.artists[0].name in output) {\n                output[track.track.artists[0].name]++;\n              } else {\n                output[track.track.artists[0].name] = 1;\n              }\n            }\n            curSongs++;\n          }\n        },\n    ).catch((err) => {\n        if (err.status === 429) {\n            setTimeout(this.countTracks(id, name, output), 500);\n        } \n        this.handleError(err)\n    });\n  }\n\n  /**\n     * Gets recommendations for a specific artist and outputs recOutput value in state\n     * @param {string} name The name of the artist\n     * @return {Promise}\n     * /\n    * */\n  async getRecs(name) {\n    const output = {};\n\n    const promises = [];\n    await spotify.searchPlaylists(name, {limit: 1})\n        .then(async (searchTotal) => await spotify.searchPlaylists(name, {limit: 50, offset: Math.floor(Math.random() * (searchTotal.playlists.total / 50))}).then(\n            (res) => {\n              for (const i of res.playlists.items) {\n                promises.push(this.isPlaylistValid(i.id, name)\n                    .then((valid) => (valid ? this.countTracks(i.id, name, output) : null)));\n              }\n            },\n        )).catch((err) => {\n                this.handleError(err)\n        });\n\n    return Promise.all(promises).then(() => this.setState({recOutput: this.processResults(output), artist: name}));\n  }\n\n  /**\n     * Processesresults from our query to spotify, removing entries beyond a certain threshhold then sorting the object.\n     * @return Results\n     */\n  processResults(input) {\n    const processed = {};\n    for (const key in input) {\n      if (input[key] > 10) {\n        processed[key] = input[key];\n      }\n    }\n    const sorted = Object.fromEntries(\n        Object.entries(processed).sort(([, a], [, b]) => b - a),\n    );\n    let output = [];\n    for (const key in sorted) {\n      output.push(key);\n    }\n    this.setState({recItems: output});\n    fetch(\"https://api64.ipify.org?format=json\")\n      .then(response => {\n        return response.json();\n      }, \"jsonp\")\n      .then(res => {\n      fetch(`http://rudiejd.aws.csi.miamioh.edu/final.php?method=logRec&artist=${this.state.artist}&recommendations=${output.join(',')}&ip=${res.ip}`, {\n        method: 'POST',\n        })\n      })\n      .catch(err => console.log(err))\n    return sorted; \n  }\n\n  /**\n   * Gets a random track for a given band. \n   * @param {string} band \n   */\n  getRandomTrack(band) {\n    return spotify.searchTracks(band, {limit: 1})\n        .then((searchTotal) => spotify.searchTracks(band, {limit: 50}))\n        .then(\n            (tracks) => {\n              if (tracks === undefined || tracks.tracks === null) {\n                  return this.getRandomTrack(band);\n              }\n              // filter so we only get songs by the artist\n              let filteredByBand = tracks.tracks.items.filter(song =>\n                song.artists[0].name === band\n              )\n\n              return filteredByBand[Math.floor(Math.random() * filteredByBand.length)];\n            },\n        ).catch(err => { \n            \n            if (err.status === 429) {\n                setTimeout(() => console.log(\"waiting to prevent 429...\"), 500)\n                return this.getRandomTrack(band)\n            } else {\n                this.handleError(err);\n            } \n            \n             \n        })\n  }\n\n  /**\n     * Creates playlist with one random song from each output artist\n     */\n  createPlaylist() {\n    const promises = [];\n    const trackUris = [];\n\n    Object.keys(this.state.recOutput).forEach(async (artist) => {\n      promises.push(\n              this.getRandomTrack(artist)\n              .then((track) => trackUris.push(track.uri))\n              .catch((err) => this.handleError(err)\n      ));\n    });\n\n    // this.setState({playlistUrl: playlist.external_urls[\"spotify\"]})\n    Promise.all(promises).then(() => {\n      if (this.state.errorStatus === undefined) {\n        const addPromises = [];\n        spotify.getMe()\n            .then((me) => spotify.createPlaylist(me.id, {name: `Recommendations Based on  ${this.state.artist}`, public: false}))\n            .then((playlist) => {\n              trackUris.forEach(\n                  (uri) => addPromises.push(\n                      spotify.addTracksToPlaylist(playlist.id, [uri])\n                      .catch(err => {\n                        if (err.status === 429) {\n                            setTimeout(() => console.log(\"waiting to prevent 429...\"), 500)\n                            return spotify.addTracksToPlaylist(playlist.id, [uri]);\n                        } else {\n                            this.handleError(err);\n                        }\n                        \n                      })\n                      \n                    )\n              );\n              this.setState({playlistUrl: playlist.external_urls.spotify});\n            });\n        Promise.all(addPromises).then(() => this.setState({playlistCreated: true}));\n      }\n    });\n  }\n\n  /**\n     *  Handles submission of Artist form\n     * @param {Object} e Submission event\n     * \n     */\n  handleSubmit(e) {\n    e.preventDefault();\n    spotify.setAccessToken(this.props.vars.token);\n    this.setState({errorStatus: undefined, alert: undefined});\n    spotify.searchArtists(this.state.artist)\n        .then(async (res) => await this.getRecs(res.artists.items[0].name))\n        .then(() => {\n        // Only show recommendations if they're non empty\n          if (this.state.errorStatus === undefined) {\n            if (Object.keys(this.state.recOutput).length === 0) {\n              this.setState(\n                  {errorStatus: 'Unfortunately, we could not find any recommendations for that artist at this time. Feel free to try another one, or try again since recommendations are randomly generated.'},\n              );\n            } else {\n              this.setState({resultReceived: true});\n            }\n          }\n        })\n        .catch((err) => {\n            if (err.status === 429) {\n                setTimeout(() => console.log(\"waiting to prevent 429...\"), 500)\n                return this.handleSubmit(e);\n            } \n            this.handleError(err)}\n        );\n  }\n\n\n  /**\n     * Render the component\n     * @return JSX\n     */\n  render() {\n    return (\n      <>\n        {this.state.alert !== undefined ? (\n          <Alert className=\"alert-success\">\n            <Text>\n              {this.state.alert}\n              <br />\n              <a href={this.state.playlistUrl}>{this.state.playlistUrl}</a>\n            </Text>\n          </Alert>\n        ) : null }\n        {this.state.errorStatus !== undefined ? \n        <Alert className=\"alert-danger\">\n          <Text>{this.state.errorStatus}</Text>\n        </Alert>\n         : null }\n            \n            \n            {this.state.resultReceived ? \n              null : \n            <div className=\"p-lg-5\">\n            <h1 className=\"mb-5 text-center\">Enter artist's name for recommendations</h1>\n            <Form onSubmit={this.handleSubmit}>\n              <Form.Group className=\"d-flex justify-content-center\">\n                <Form.Control type=\"text\" placeholder=\"Iron Maiden\" name=\"artist\" className=\"w-50\" onChange={this.handleChange} required />\n              </Form.Group>\n              <Form.Group className=\"d-flex justify-content-center\">\n                <Form.Control type=\"submit\" className=\"w-25 bg-primary text-light\" value=\"Go!\"/>\n              </Form.Group>\n            </Form> \n            </div>}\n\n        <div>\n          {this.state.resultReceived ? (\n            <h1 className=\"mb-2 text-center\">\n              Since you like {this.state.artist}, you might like:\n            </h1>\n          ) : null }\n              {this.state.resultReceived ? \n              (\n                <BandPaginator bands={this.state.recItems} perPage={5}></BandPaginator>\n              ) : null }\n            <Row className=\"d-flex justify-content-center\">\n              {this.state.resultReceived ? \n                this.state.playlistCreated ?\n                <Button className=\"bg-success mt-3\"onClick={ () => {window.location.href = this.state.playlistUrl;} }> Playlist created! Click to open it up.</Button> :\n                <Button className=\"mt-3\" onClick={this.createPlaylist}>Create a playlist with songs from these artists</Button> : \n                null\n                }\n            </Row>    \n        </div>\n\n      </>\n\n\n    );\n  }\n}\n\n// mapping our redux state to box props\nconst mapStateToProps = (state) => ({\n  vars: state.vars,\n});\n\n// mapping the dispatches from our reducer to box props\nconst mapDispatchToProps = (dispatch) => ({\n  change: (vName) => dispatch({type: 'CHANGE', name: vName}),\n\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SpotifyForm));\n"]},"metadata":{},"sourceType":"module"}