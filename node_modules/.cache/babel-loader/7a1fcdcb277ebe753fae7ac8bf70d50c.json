{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rudiejd\\\\Documents\\\\crowdrec\\\\app\\\\src\\\\components\\\\SpotifyAuth.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nexport const authEndpoint = 'https://accounts.spotify.com/authorize';\n\nclass SpotifyAuth extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAuthenticatedWithSpotify: false // menu: this.props.userId.menu\n\n    };\n    this.state.handleRedirect = this.handleRedirect.bind(this);\n  }\n\n  componentDidMount() {\n    const hash = window.location.hash.substring(1).split('&').reduce(function (initial, item) {\n      if (item) {\n        var parts = item.split('=');\n        initial[parts[0]] = decodeURIComponent(parts[1]);\n      }\n\n      return initial;\n    }, {});\n    const access_token = hash.access_token;\n    this.props.change({\n      'name': 'token',\n      'value': access_token\n    });\n  }\n\n  handleRedirect(event) {\n    event.preventDefault();\n    const hash = window.location.hash.substring(1).split('&').reduce(function (initial, item) {\n      if (item) {\n        var parts = item.split('=');\n        initial[parts[0]] = decodeURIComponent(parts[1]);\n      }\n\n      return initial;\n    }, {});\n    const access_token = hash.access_token;\n    let url = 'https://accounts.spotify.com/authorize' + '?response_type=token' + '&client_id=3f31f6d13b974219a7093698a47d76f9' + '&scope=' + encodeURIComponent('user-read-private%20user-read-email') + '&redirect_uri=' + encodeURIComponent('http://localhost:3000');\n    window.location = url;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Button, {\n      className: \"sp_button\",\n      onClick: event => this.handleRedirect(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, \"Link spotify to get started\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    vars: state.vars\n  };\n}; // mapping the dispatches from our reducer to box props \n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    change: vName => dispatch({\n      type: 'CHANGE',\n      name: vName\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SpotifyAuth);","map":{"version":3,"sources":["C:/Users/rudiejd/Documents/crowdrec/app/src/components/SpotifyAuth.js"],"names":["React","Component","Button","connect","authEndpoint","SpotifyAuth","constructor","props","state","isAuthenticatedWithSpotify","handleRedirect","bind","componentDidMount","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","access_token","change","event","preventDefault","url","encodeURIComponent","render","mapStateToProps","vars","mapDispatchToProps","dispatch","vName","type","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Button} from 'react-bootstrap';\r\nimport {connect} from 'react-redux';\r\n\r\nexport const authEndpoint = 'https://accounts.spotify.com/authorize';\r\nclass SpotifyAuth extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isAuthenticatedWithSpotify: false\r\n      // menu: this.props.userId.menu\r\n    };\r\n    this.state.handleRedirect = this.handleRedirect.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const hash = window.location.hash\r\n    .substring(1)\r\n    .split('&')\r\n    .reduce(function (initial, item) {\r\n      if (item) {\r\n        var parts = item.split('=');\r\n        initial[parts[0]] = decodeURIComponent(parts[1]);\r\n      }\r\n      return initial;\r\n    }, {});\r\n\r\n    const access_token = hash.access_token;\r\n    this.props.change({'name': 'token', 'value': access_token})\r\n    \r\n    \r\n  }\r\n\r\n  handleRedirect(event) {\r\n    event.preventDefault();\r\n    const hash = window.location.hash\r\n    .substring(1)\r\n    .split('&')\r\n    .reduce(function (initial, item) {\r\n      if (item) {\r\n        var parts = item.split('=');\r\n        initial[parts[0]] = decodeURIComponent(parts[1]);\r\n      }\r\n      return initial;\r\n    }, {});\r\n    const access_token = hash.access_token;\r\n\r\n    let url =\r\n      'https://accounts.spotify.com/authorize' +    \r\n      '?response_type=token' +\r\n      '&client_id=3f31f6d13b974219a7093698a47d76f9' +\r\n      '&scope=' +\r\n      encodeURIComponent('user-read-private%20user-read-email') +\r\n      '&redirect_uri=' +\r\n      encodeURIComponent('http://localhost:3000');\r\n      window.location = url;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n        <Button className=\"sp_button\" onClick={(event) => this.handleRedirect(event)} >\r\n          Link spotify to get started\r\n        </Button>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      vars:state.vars\r\n    }\r\n  };\r\n  \r\n  // mapping the dispatches from our reducer to box props \r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      change: (vName) => dispatch( {type: 'CHANGE', name: vName} ),\r\n  \r\n    }\r\n  \r\n  }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SpotifyAuth);"]},"metadata":{},"sourceType":"module"}