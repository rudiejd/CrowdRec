{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\rudiejd\\\\Documents\\\\crowdrec\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _createForOfIteratorHelper from\"C:\\\\Users\\\\rudiejd\\\\Documents\\\\crowdrec\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";import _regeneratorRuntime from\"C:\\\\Users\\\\rudiejd\\\\Documents\\\\crowdrec\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\rudiejd\\\\Documents\\\\crowdrec\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"C:\\\\Users\\\\rudiejd\\\\Documents\\\\crowdrec\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"C:\\\\Users\\\\rudiejd\\\\Documents\\\\crowdrec\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\rudiejd\\\\Documents\\\\crowdrec\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\Users\\\\rudiejd\\\\Documents\\\\crowdrec\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\rudiejd\\\\Documents\\\\crowdrec\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\rudiejd\\\\Documents\\\\crowdrec\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import{withRouter}from'react-router-dom';import React,{Component}from'react';import{Card,Form,Button,Alert,Row}from'react-bootstrap';import{connect}from'react-redux';import SpotifyWebApi from'spotify-web-api-js';var spotify=new SpotifyWebApi();var SpotifyForm=/*#__PURE__*/function(_Component){_inherits(SpotifyForm,_Component);var _super=_createSuper(SpotifyForm);function SpotifyForm(props){var _this;_classCallCheck(this,SpotifyForm);_this=_super.call(this,props);_this.state={resultReceived:false,recOutput:{},errorStatus:undefined};_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));_this.handleSubmit=_this.handleSubmit.bind(_assertThisInitialized(_this));_this.processResults=_this.processResults.bind(_assertThisInitialized(_this));_this.getRecs=_this.getRecs.bind(_assertThisInitialized(_this));_this.createPlaylist=_this.createPlaylist.bind(_assertThisInitialized(_this));_this.countTracks=_this.countTracks.bind(_assertThisInitialized(_this));_this.getRandomTrack=_this.getRandomTrack.bind(_assertThisInitialized(_this));return _this;}/**\r\n     * Handle change in the artist value\r\n     * @param {Object} event Event incurred by change\r\n     */_createClass(SpotifyForm,[{key:\"handleChange\",value:function handleChange(event){this.setState({resultReceived:false,alert:undefined});var target=event.target;var value=target.value;var name=target.name;this.setState(_defineProperty({},name,value));this.render();}/**\r\n     * Handle HTTP errors encountered by updating the state with an error message\r\n     * @param {Object} err\r\n     */},{key:\"handleError\",value:function(){var _handleError=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(err){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=err.status;_context.next=_context.t0===401?3:_context.t0===429?5:_context.t0===501?7:9;break;case 3:this.setState({errorStatus:'You don\\'t seem to be authorized. Try clicking the button above to authorize with Spotify and try again.',resultReceived:false});return _context.abrupt(\"break\",10);case 5:this.setState({errorStatus:'Looks like we\\'re making too many requests to Spotify right now. Wait a little bit and try that again.'});return _context.abrupt(\"break\",10);case 7:this.setState({errorStatus:'Spotify\\'s servers are fried! Check out their status, then try again when they\\'re back up'});return _context.abrupt(\"break\",10);case 9:console.log(err);case 10:case\"end\":return _context.stop();}}},_callee,this);}));function handleError(_x){return _handleError.apply(this,arguments);}return handleError;}()/**\r\n     * Checks whether a playlist contains is valid. Criteria for validity are:\r\n     *  - playlist attributes are well-defined (no null properties)\r\n     *  - playlist must contain the artist for which user is searching\r\n     * @param {string} id ID of playlist\r\n     * @param {*} artist Name of artist\r\n     * @return {Promise<boolean>} true if playlist is valid, false otherwise\r\n     */},{key:\"isPlaylistValid\",value:function(){var _isPlaylistValid=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id,artist){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:return _context2.abrupt(\"return\",spotify.getPlaylistTracks(id).then(function(pt){if(pt===undefined){return;}var _iterator=_createForOfIteratorHelper(pt.items),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var track=_step.value;if(track===undefined||track.track===null){continue;}else if(track.track.artists[0].name===artist){return true;}}}catch(err){_iterator.e(err);}finally{_iterator.f();}return false;}));case 1:case\"end\":return _context2.stop();}}},_callee2);}));function isPlaylistValid(_x2,_x3){return _isPlaylistValid.apply(this,arguments);}return isPlaylistValid;}()/**\r\n     * Asynchronously counts tracks by a given artist in a given playlist\r\n     * @param {string} id ID of the playlist\r\n     * @param {string} name Name of the artist\r\n     * @param {object} output Reference to output object which should be modified\r\n     * @return {Promise}\r\n     */},{key:\"countTracks\",value:function(){var _countTracks=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id,name,output){var _this2=this;var MAX_SONGS;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:MAX_SONGS=200;return _context3.abrupt(\"return\",spotify.getPlaylistTracks(id).then(function(pt){var curSongs=0;var _iterator2=_createForOfIteratorHelper(pt.items),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var track=_step2.value;if(curSongs>MAX_SONGS)break;if(track.track!=null&&track.track.artists[0].name!==name&&track.track.artists[0].name!==''){if(track.track.artists[0].name in output){output[track.track.artists[0].name]++;}else{output[track.track.artists[0].name]=1;}}curSongs++;}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}}).catch(function(err){if(err.status===429){setTimeout(_this2.countTracks(id,name,output),500);}_this2.handleError(err);}));case 2:case\"end\":return _context3.stop();}}},_callee3);}));function countTracks(_x4,_x5,_x6){return _countTracks.apply(this,arguments);}return countTracks;}()/**\r\n     * Gets recommendations for a specific artist and outputs recOutput value in state\r\n     * @param {string} name The name of the artist\r\n     * @return {Promise}\r\n     * /\r\n    * */},{key:\"getRecs\",value:function(){var _getRecs=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(name){var _this3=this;var output,promises;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:debugger;output={};promises=[];_context5.next=5;return spotify.searchPlaylists(name,{limit:1}).then(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(searchTotal){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return spotify.searchPlaylists(name,{limit:50,offset:Math.floor(Math.random()*(searchTotal.playlists.total/50))}).then(function(res){var _iterator3=_createForOfIteratorHelper(res.playlists.items),_step3;try{var _loop=function _loop(){var i=_step3.value;promises.push(_this3.isPlaylistValid(i.id,name).then(function(valid){return valid?_this3.countTracks(i.id,name,output):null;}));};for(_iterator3.s();!(_step3=_iterator3.n()).done;){_loop();}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}});case 2:return _context4.abrupt(\"return\",_context4.sent);case 3:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x8){return _ref.apply(this,arguments);};}()).catch(function(err){_this3.handleError(err);});case 5:return _context5.abrupt(\"return\",Promise.all(promises).then(function(){return _this3.setState({recOutput:_this3.processResults(output),artist:name});}));case 6:case\"end\":return _context5.stop();}}},_callee5);}));function getRecs(_x7){return _getRecs.apply(this,arguments);}return getRecs;}()/**\r\n     * Processesresults from our query to spotify, removing entries beyond a certain threshhold then sorting the object.\r\n     * @return Results\r\n     */},{key:\"processResults\",value:function processResults(input){var processed={};for(var key in input){if(input[key]>10){processed[key]=input[key];}}var sorted=Object.fromEntries(Object.entries(processed).sort(function(_ref2,_ref3){var _ref4=_slicedToArray(_ref2,2),a=_ref4[1];var _ref5=_slicedToArray(_ref3,2),b=_ref5[1];return b-a;}));return sorted;}},{key:\"getRandomTrack\",value:function getRandomTrack(band){var _this4=this;return spotify.searchTracks(band,{limit:1}).then(function(searchTotal){return spotify.searchTracks(band,{limit:50});}).then(function(tracks){if(tracks===undefined||tracks.tracks===null){return _this4.getRandomTrack(band);}// filter so we only get songs by the artist\nvar filteredByBand=tracks.tracks.items.filter(function(song){return song.artists[0]=band;});console.log('filtered: ');console.log(filteredByBand);console.log('regular: ');console.log(tracks);return filteredByBand[Math.floor(Math.random()*filteredByBand.length)];}).catch(function(err){if(err.status===429){setTimeout(function(){return console.log(\"waiting to prevent 429...\");},500);return _this4.getRandomTrack(band);}else{_this4.handleError(err);}});}/**\r\n     * Creates playlist with one random song from each output artist\r\n     */},{key:\"createPlaylist\",value:function createPlaylist(){var _this5=this;debugger;var promises=[];var trackUris=[];Object.keys(this.state.recOutput).forEach(/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(artist){return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:promises.push(_this5.getRandomTrack(artist).then(function(track){return trackUris.push(track.uri);}).catch(function(err){return _this5.handleError(err);}));case 1:case\"end\":return _context6.stop();}}},_callee6);}));return function(_x9){return _ref6.apply(this,arguments);};}());// this.setState({playlistUrl: playlist.external_urls[\"spotify\"]})\nPromise.all(promises).then(function(){if(_this5.state.errorStatus===undefined){var addPromises=[];spotify.getMe().then(function(me){return spotify.createPlaylist(me.id,{name:\"Recommendations Based on  \".concat(_this5.state.artist),public:false});}).then(function(playlist){trackUris.forEach(function(uri){return addPromises.push(spotify.addTracksToPlaylist(playlist.id,[uri]).catch(function(err){if(err.status===429){setTimeout(function(){return console.log(\"waiting to prevent 429...\");},500);return spotify.addTracksToPlaylist(playlist.id,[uri]);}else{_this5.handleError(err);}}));});_this5.setState({playlistUrl:playlist.external_urls.spotify});});Promise.all(addPromises).then(function(){return _this5.setState({alert:'Playlist created! Click below to open it up. Enjoy :)'});});}});}/**\r\n     *  Handles submission of Artist form\r\n     * @param {Object} e Submission event\r\n     * TODO: Error handling\r\n     */},{key:\"handleSubmit\",value:function handleSubmit(e){var _this6=this;e.preventDefault();spotify.setAccessToken(this.props.vars.token);this.setState({errorStatus:undefined,alert:undefined});console.log(this.state);spotify.searchArtists(this.state.artist).then(/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(res){return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.next=2;return _this6.getRecs(res.artists.items[0].name);case 2:return _context7.abrupt(\"return\",_context7.sent);case 3:case\"end\":return _context7.stop();}}},_callee7);}));return function(_x10){return _ref7.apply(this,arguments);};}()).then(function(){// Only show recommendations if they're non empty\nif(_this6.state.errorStatus===undefined){if(Object.keys(_this6.state.recOutput).length===0){_this6.setState({errorStatus:'Unfortunately, we could not find any recommendations for that artist at this time. Feel free to try another one, or try again since recommendations are randomly generated.'});}else{_this6.setState({resultReceived:true});}}}).catch(function(err){if(err.status===429){setTimeout(function(){return console.log(\"waiting to prevent 429...\");},500);return _this6.handleSubmit(e);}_this6.handleError(err);});}/**\r\n     * Render the component\r\n     * @return JSX\r\n     */},{key:\"render\",value:function render(){var _this7=this;return/*#__PURE__*/React.createElement(React.Fragment,null,this.state.alert!==undefined?/*#__PURE__*/React.createElement(Alert,{className:\"alert-success\"},this.state.alert,/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"a\",{href:this.state.playlistUrl},this.state.playlistUrl)):null,this.state.errorStatus!==undefined?/*#__PURE__*/React.createElement(Alert,{className:\"alert-danger\"},this.state.errorStatus):null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,null,\"Enter artist's name for recommendations\"),/*#__PURE__*/React.createElement(Form,{onSubmit:this.handleSubmit},/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Label,null,\"Artist\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:\"Iron Maiden\",name:\"artist\",onChange:this.handleChange,required:true})),/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Control,{type:\"submit\",className:\"bg-primary text-light col-8 offset-2\"})),/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Control,{type:\"reset\",className:\"bg-primary text-light col-8 offset-2\"}))))),/*#__PURE__*/React.createElement(\"div\",{className:\"d-block\"},this.state.resultReceived?/*#__PURE__*/React.createElement(\"h4\",null,\"Recommended Artists for \",this.state.artist):null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(\"ul\",{className:\"col-6\"},this.state.resultReceived?Object.keys(this.state.recOutput).map(function(band){return/*#__PURE__*/React.createElement(\"li\",{key:band},band,\":\",' ',_this7.state.recOutput[band]);}):null),this.state.resultReceived?/*#__PURE__*/React.createElement(Button,{className:\"mt-3 col-6 h-50 w-50\",onClick:this.createPlaylist},\"Create a playlist with songs from these artists\"):null)));}}]);return SpotifyForm;}(Component);// mapping our redux state to box props\nvar mapStateToProps=function mapStateToProps(state){return{vars:state.vars};};// mapping the dispatches from our reducer to box props\nvar mapDispatchToProps=function mapDispatchToProps(dispatch){return{change:function change(vName){return dispatch({type:'CHANGE',name:vName});}};};export default withRouter(connect(mapStateToProps,mapDispatchToProps)(SpotifyForm));","map":{"version":3,"sources":["C:/Users/rudiejd/Documents/crowdrec/app/src/components/SpotifyForm.js"],"names":["withRouter","React","Component","Card","Form","Button","Alert","Row","connect","SpotifyWebApi","spotify","SpotifyForm","props","state","resultReceived","recOutput","errorStatus","undefined","handleChange","bind","handleSubmit","processResults","getRecs","createPlaylist","countTracks","getRandomTrack","event","setState","alert","target","value","name","render","err","status","console","log","id","artist","getPlaylistTracks","then","pt","items","track","artists","output","MAX_SONGS","curSongs","catch","setTimeout","handleError","promises","searchPlaylists","limit","searchTotal","offset","Math","floor","random","playlists","total","res","i","push","isPlaylistValid","valid","Promise","all","input","processed","key","sorted","Object","fromEntries","entries","sort","a","b","band","searchTracks","tracks","filteredByBand","filter","song","length","trackUris","keys","forEach","uri","addPromises","getMe","me","public","playlist","addTracksToPlaylist","playlistUrl","external_urls","e","preventDefault","setAccessToken","vars","token","searchArtists","map","mapStateToProps","mapDispatchToProps","dispatch","change","vName","type"],"mappings":"uqDAAA,OAAQA,UAAR,KAAyB,kBAAzB,CACA,MAAOC,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,OACEC,IADF,CACQC,IADR,CACcC,MADd,CACsBC,KADtB,CAC6BC,GAD7B,KAEO,iBAFP,CAGA,OAAQC,OAAR,KAAsB,aAAtB,CACA,MAAOC,CAAAA,aAAP,KAA0B,oBAA1B,CAEA,GAAMC,CAAAA,OAAO,CAAG,GAAID,CAAAA,aAAJ,EAAhB,C,GAGME,CAAAA,W,0GACJ,qBAAYC,KAAZ,CAAmB,6CACjB,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CAACC,cAAc,CAAE,KAAjB,CAAwBC,SAAS,CAAE,EAAnC,CAAuCC,WAAW,CAAEC,SAApD,CAAb,CACA,MAAKC,YAAL,CAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB,CACA,MAAKC,YAAL,CAAoB,MAAKA,YAAL,CAAkBD,IAAlB,+BAApB,CACA,MAAKE,cAAL,CAAsB,MAAKA,cAAL,CAAoBF,IAApB,+BAAtB,CACA,MAAKG,OAAL,CAAe,MAAKA,OAAL,CAAaH,IAAb,+BAAf,CACA,MAAKI,cAAL,CAAsB,MAAKA,cAAL,CAAoBJ,IAApB,+BAAtB,CACA,MAAKK,WAAL,CAAmB,MAAKA,WAAL,CAAiBL,IAAjB,+BAAnB,CACA,MAAKM,cAAL,CAAsB,MAAKA,cAAL,CAAoBN,IAApB,+BAAtB,CATiB,aAUlB,CAED;;;iFAIaO,K,CAAO,CAClB,KAAKC,QAAL,CAAc,CAACb,cAAc,CAAE,KAAjB,CAAwBc,KAAK,CAAEX,SAA/B,CAAd,EADkB,GAEXY,CAAAA,MAFW,CAEDH,KAFC,CAEXG,MAFW,IAGXC,CAAAA,KAHW,CAGFD,MAHE,CAGXC,KAHW,IAIXC,CAAAA,IAJW,CAIHF,MAJG,CAIXE,IAJW,CAKlB,KAAKJ,QAAL,oBAAgBI,IAAhB,CAAuBD,KAAvB,GACA,KAAKE,MAAL,GACD,CAED;;;uIAIkBC,G,8HACRA,GAAG,CAACC,M,6BACL,G,iBAGA,G,iBAGA,G,kBALH,KAAKP,QAAL,CAAc,CAACX,WAAW,CAAE,0GAAd,CAA0HF,cAAc,CAAE,KAA1I,CAAd,E,0CAGA,KAAKa,QAAL,CAAc,CAACX,WAAW,CAAE,wGAAd,CAAd,E,0CAGA,KAAKW,QAAL,CAAc,CAACX,WAAW,CAAE,4FAAd,CAAd,E,0CAGAmB,OAAO,CAACC,GAAR,CAAYH,GAAZ,E,yJAIN;;;;;;;gJAQsBI,E,CAAIC,M,uJACjB5B,OAAO,CAAC6B,iBAAR,CAA0BF,EAA1B,EACFG,IADE,CAEC,SAACC,EAAD,CAAQ,CACN,GAAIA,EAAE,GAAKxB,SAAX,CAAsB,CACpB,OACD,CAHK,yCAIcwB,EAAE,CAACC,KAJjB,YAIN,+CAA8B,IAAnBC,CAAAA,KAAmB,aAC5B,GAAIA,KAAK,GAAK1B,SAAV,EAAuB0B,KAAK,CAACA,KAAN,GAAgB,IAA3C,CAAiD,CAC/C,SACD,CAFD,IAEO,IAAIA,KAAK,CAACA,KAAN,CAAYC,OAAZ,CAAoB,CAApB,EAAuBb,IAAvB,GAAgCO,MAApC,CAA4C,CACjD,MAAO,KAAP,CACD,CACF,CAVK,qDAWN,MAAO,MAAP,CACD,CAdF,C,wKAkBT;;;;;;wIAOkBD,E,CAAIN,I,CAAMc,M,oJACpBC,S,CAAY,G,kCACXpC,OAAO,CAAC6B,iBAAR,CAA0BF,EAA1B,EAA8BG,IAA9B,CACH,SAACC,EAAD,CAAQ,CACN,GAAIM,CAAAA,QAAQ,CAAG,CAAf,CADM,0CAEcN,EAAE,CAACC,KAFjB,aAEN,kDAA8B,IAAnBC,CAAAA,KAAmB,cAC5B,GAAII,QAAQ,CAAGD,SAAf,CAA0B,MAC1B,GAAIH,KAAK,CAACA,KAAN,EAAe,IAAf,EACQA,KAAK,CAACA,KAAN,CAAYC,OAAZ,CAAoB,CAApB,EAAuBb,IAAvB,GAAgCA,IADxC,EAEQY,KAAK,CAACA,KAAN,CAAYC,OAAZ,CAAoB,CAApB,EAAuBb,IAAvB,GAAgC,EAF5C,CAEgD,CAC9C,GAAIY,KAAK,CAACA,KAAN,CAAYC,OAAZ,CAAoB,CAApB,EAAuBb,IAAvB,GAA+Bc,CAAAA,MAAnC,CAA2C,CACzCA,MAAM,CAACF,KAAK,CAACA,KAAN,CAAYC,OAAZ,CAAoB,CAApB,EAAuBb,IAAxB,CAAN,GACD,CAFD,IAEO,CACLc,MAAM,CAACF,KAAK,CAACA,KAAN,CAAYC,OAAZ,CAAoB,CAApB,EAAuBb,IAAxB,CAAN,CAAsC,CAAtC,CACD,CACF,CACDgB,QAAQ,GACT,CAdK,uDAeP,CAhBE,EAiBLC,KAjBK,CAiBC,SAACf,GAAD,CAAS,CACb,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACpBe,UAAU,CAAC,MAAI,CAACzB,WAAL,CAAiBa,EAAjB,CAAqBN,IAArB,CAA2Bc,MAA3B,CAAD,CAAqC,GAArC,CAAV,CACH,CACD,MAAI,CAACK,WAAL,CAAiBjB,GAAjB,EACH,CAtBM,C,gKAyBT;;;;;iIAMcF,I,0JACZ,SACMc,M,CAAS,E,CAETM,Q,CAAW,E,wBACXzC,CAAAA,OAAO,CAAC0C,eAAR,CAAwBrB,IAAxB,CAA8B,CAACsB,KAAK,CAAE,CAAR,CAA9B,EACDb,IADC,0FACI,kBAAOc,WAAP,6IAA6B5C,CAAAA,OAAO,CAAC0C,eAAR,CAAwBrB,IAAxB,CAA8B,CAACsB,KAAK,CAAE,EAAR,CAAYE,MAAM,CAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,IAAiBJ,WAAW,CAACK,SAAZ,CAAsBC,KAAtB,CAA8B,EAA/C,CAAX,CAApB,CAA9B,EAAmHpB,IAAnH,CAC/B,SAACqB,GAAD,CAAS,2CACSA,GAAG,CAACF,SAAJ,CAAcjB,KADvB,2CACIoB,CAAAA,CADJ,cAELX,QAAQ,CAACY,IAAT,CAAc,MAAI,CAACC,eAAL,CAAqBF,CAAC,CAACzB,EAAvB,CAA2BN,IAA3B,EACTS,IADS,CACJ,SAACyB,KAAD,QAAYA,CAAAA,KAAK,CAAG,MAAI,CAACzC,WAAL,CAAiBsC,CAAC,CAACzB,EAAnB,CAAuBN,IAAvB,CAA6Bc,MAA7B,CAAH,CAA0C,IAA3D,EADI,CAAd,EAFK,EACP,kDAAqC,SAGpC,CAJM,uDAKR,CAN8B,CAA7B,iHADJ,iEAQCG,KARD,CAQO,SAACf,GAAD,CAAS,CACV,MAAI,CAACiB,WAAL,CAAiBjB,GAAjB,EACP,CAVC,C,yCAYCiC,OAAO,CAACC,GAAR,CAAYhB,QAAZ,EAAsBX,IAAtB,CAA2B,iBAAM,CAAA,MAAI,CAACb,QAAL,CAAc,CAACZ,SAAS,CAAE,MAAI,CAACM,cAAL,CAAoBwB,MAApB,CAAZ,CAAyCP,MAAM,CAAEP,IAAjD,CAAd,CAAN,EAA3B,C,4IAGT;;;6DAIeqC,K,CAAO,CACpB,GAAMC,CAAAA,SAAS,CAAG,EAAlB,CACA,IAAK,GAAMC,CAAAA,GAAX,GAAkBF,CAAAA,KAAlB,CAAyB,CACvB,GAAIA,KAAK,CAACE,GAAD,CAAL,CAAa,EAAjB,CAAqB,CACnBD,SAAS,CAACC,GAAD,CAAT,CAAiBF,KAAK,CAACE,GAAD,CAAtB,CACD,CACF,CACD,GAAMC,CAAAA,MAAM,CAAGC,MAAM,CAACC,WAAP,CACXD,MAAM,CAACE,OAAP,CAAeL,SAAf,EAA0BM,IAA1B,CAA+B,wDAAIC,CAAJ,4CAAWC,CAAX,gBAAkBA,CAAAA,CAAC,CAAGD,CAAtB,EAA/B,CADW,CAAf,CAGA,MAAOL,CAAAA,MAAP,CACD,C,sDAGcO,I,CAAM,iBACnB,MAAOpE,CAAAA,OAAO,CAACqE,YAAR,CAAqBD,IAArB,CAA2B,CAACzB,KAAK,CAAE,CAAR,CAA3B,EACFb,IADE,CACG,SAACc,WAAD,QAAiB5C,CAAAA,OAAO,CAACqE,YAAR,CAAqBD,IAArB,CAA2B,CAACzB,KAAK,CAAE,EAAR,CAA3B,CAAjB,EADH,EAEFb,IAFE,CAGC,SAACwC,MAAD,CAAY,CACV,GAAIA,MAAM,GAAK/D,SAAX,EAAwB+D,MAAM,CAACA,MAAP,GAAkB,IAA9C,CAAoD,CAChD,MAAO,CAAA,MAAI,CAACvD,cAAL,CAAoBqD,IAApB,CAAP,CACH,CACD;AACA,GAAIG,CAAAA,cAAc,CAAGD,MAAM,CAACA,MAAP,CAActC,KAAd,CAAoBwC,MAApB,CAA2B,SAAAC,IAAI,QAClDA,CAAAA,IAAI,CAACvC,OAAL,CAAa,CAAb,EAAkBkC,IADgC,EAA/B,CAArB,CAGA3C,OAAO,CAACC,GAAR,CAAY,YAAZ,EACAD,OAAO,CAACC,GAAR,CAAY6C,cAAZ,EACA9C,OAAO,CAACC,GAAR,CAAY,WAAZ,EACAD,OAAO,CAACC,GAAR,CAAY4C,MAAZ,EACA,MAAOC,CAAAA,cAAc,CAACzB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgBuB,cAAc,CAACG,MAA1C,CAAD,CAArB,CACD,CAhBF,EAiBDpC,KAjBC,CAiBK,SAAAf,GAAG,CAAI,CAEX,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACpBe,UAAU,CAAC,iBAAMd,CAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,CAAN,EAAD,CAAiD,GAAjD,CAAV,CACA,MAAO,CAAA,MAAI,CAACX,cAAL,CAAoBqD,IAApB,CAAP,CACH,CAHD,IAGO,CACH,MAAI,CAAC5B,WAAL,CAAiBjB,GAAjB,EACH,CAGJ,CA3BE,CAAP,CA4BD,CAED;;8DAGiB,iBACf,SACA,GAAMkB,CAAAA,QAAQ,CAAG,EAAjB,CACA,GAAMkC,CAAAA,SAAS,CAAG,EAAlB,CAEAb,MAAM,CAACc,IAAP,CAAY,KAAKzE,KAAL,CAAWE,SAAvB,EAAkCwE,OAAlC,2FAA0C,kBAAOjD,MAAP,sHACxCa,QAAQ,CAACY,IAAT,CACQ,MAAI,CAACtC,cAAL,CAAoBa,MAApB,EACCE,IADD,CACM,SAACG,KAAD,QAAW0C,CAAAA,SAAS,CAACtB,IAAV,CAAepB,KAAK,CAAC6C,GAArB,CAAX,EADN,EAECxC,KAFD,CAEO,SAACf,GAAD,QAAS,CAAA,MAAI,CAACiB,WAAL,CAAiBjB,GAAjB,CAAT,EAFP,CADR,EADwC,wDAA1C,kEAQA;AACAiC,OAAO,CAACC,GAAR,CAAYhB,QAAZ,EAAsBX,IAAtB,CAA2B,UAAM,CAC/B,GAAI,MAAI,CAAC3B,KAAL,CAAWG,WAAX,GAA2BC,SAA/B,CAA0C,CACxC,GAAMwE,CAAAA,WAAW,CAAG,EAApB,CACA/E,OAAO,CAACgF,KAAR,GACKlD,IADL,CACU,SAACmD,EAAD,QAAQjF,CAAAA,OAAO,CAACa,cAAR,CAAuBoE,EAAE,CAACtD,EAA1B,CAA8B,CAACN,IAAI,qCAA+B,MAAI,CAAClB,KAAL,CAAWyB,MAA1C,CAAL,CAAyDsD,MAAM,CAAE,KAAjE,CAA9B,CAAR,EADV,EAEKpD,IAFL,CAEU,SAACqD,QAAD,CAAc,CAClBR,SAAS,CAACE,OAAV,CACI,SAACC,GAAD,QAASC,CAAAA,WAAW,CAAC1B,IAAZ,CACLrD,OAAO,CAACoF,mBAAR,CAA4BD,QAAQ,CAACxD,EAArC,CAAyC,CAACmD,GAAD,CAAzC,EACCxC,KADD,CACO,SAAAf,GAAG,CAAI,CACZ,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACpBe,UAAU,CAAC,iBAAMd,CAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,CAAN,EAAD,CAAiD,GAAjD,CAAV,CACA,MAAO1B,CAAAA,OAAO,CAACoF,mBAAR,CAA4BD,QAAQ,CAACxD,EAArC,CAAyC,CAACmD,GAAD,CAAzC,CAAP,CACH,CAHD,IAGO,CACH,MAAI,CAACtC,WAAL,CAAiBjB,GAAjB,EACH,CAEF,CATD,CADK,CAAT,EADJ,EAeA,MAAI,CAACN,QAAL,CAAc,CAACoE,WAAW,CAAEF,QAAQ,CAACG,aAAT,CAAuBtF,OAArC,CAAd,EACD,CAnBL,EAoBAwD,OAAO,CAACC,GAAR,CAAYsB,WAAZ,EAAyBjD,IAAzB,CAA8B,iBAAM,CAAA,MAAI,CAACb,QAAL,CAAc,CAACC,KAAK,CAAE,uDAAR,CAAd,CAAN,EAA9B,EACD,CACF,CAzBD,EA0BD,CAED;;;;yDAKaqE,C,CAAG,iBACdA,CAAC,CAACC,cAAF,GACAxF,OAAO,CAACyF,cAAR,CAAuB,KAAKvF,KAAL,CAAWwF,IAAX,CAAgBC,KAAvC,EACA,KAAK1E,QAAL,CAAc,CAACX,WAAW,CAAEC,SAAd,CAAyBW,KAAK,CAAEX,SAAhC,CAAd,EACAkB,OAAO,CAACC,GAAR,CAAY,KAAKvB,KAAjB,EACAH,OAAO,CAAC4F,aAAR,CAAsB,KAAKzF,KAAL,CAAWyB,MAAjC,EACKE,IADL,2FACU,kBAAOqB,GAAP,6IAAqB,CAAA,MAAI,CAACvC,OAAL,CAAauC,GAAG,CAACjB,OAAJ,CAAYF,KAAZ,CAAkB,CAAlB,EAAqBX,IAAlC,CAArB,iHADV,mEAEKS,IAFL,CAEU,UAAM,CACZ;AACE,GAAI,MAAI,CAAC3B,KAAL,CAAWG,WAAX,GAA2BC,SAA/B,CAA0C,CACxC,GAAIuD,MAAM,CAACc,IAAP,CAAY,MAAI,CAACzE,KAAL,CAAWE,SAAvB,EAAkCqE,MAAlC,GAA6C,CAAjD,CAAoD,CAClD,MAAI,CAACzD,QAAL,CACI,CAACX,WAAW,CAAE,6KAAd,CADJ,EAGD,CAJD,IAIO,CACL,MAAI,CAACW,QAAL,CAAc,CAACb,cAAc,CAAE,IAAjB,CAAd,EACD,CACF,CACF,CAbL,EAcKkC,KAdL,CAcW,SAACf,GAAD,CAAS,CACZ,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACpBe,UAAU,CAAC,iBAAMd,CAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,CAAN,EAAD,CAAiD,GAAjD,CAAV,CACA,MAAO,CAAA,MAAI,CAAChB,YAAL,CAAkB6E,CAAlB,CAAP,CACH,CACD,MAAI,CAAC/C,WAAL,CAAiBjB,GAAjB,EAAsB,CAnB9B,EAqBD,CAGD;;;8CAIS,iBACP,mBACE,wCACG,KAAKpB,KAAL,CAAWe,KAAX,GAAqBX,SAArB,cACC,oBAAC,KAAD,EAAO,SAAS,CAAC,eAAjB,EACG,KAAKJ,KAAL,CAAWe,KADd,cAEE,8BAFF,cAGE,yBAAG,IAAI,CAAE,KAAKf,KAAL,CAAWkF,WAApB,EAAkC,KAAKlF,KAAL,CAAWkF,WAA7C,CAHF,CADD,CAMG,IAPN,CAQG,KAAKlF,KAAL,CAAWG,WAAX,GAA2BC,SAA3B,cAAuC,oBAAC,KAAD,EAAO,SAAS,CAAC,cAAjB,EAAiC,KAAKJ,KAAL,CAAWG,WAA5C,CAAvC,CAA0G,IAR7G,cASE,oBAAC,IAAD,mBACE,oBAAC,IAAD,CAAM,IAAN,mBACE,oBAAC,IAAD,CAAM,KAAN,gDADF,cAEE,oBAAC,IAAD,EAAM,QAAQ,CAAE,KAAKI,YAArB,eACE,oBAAC,IAAD,CAAM,KAAN,mBACE,oBAAC,IAAD,CAAM,KAAN,eADF,cAEE,oBAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,MAAnB,CAA0B,WAAW,CAAC,aAAtC,CAAoD,IAAI,CAAC,QAAzD,CAAkE,QAAQ,CAAE,KAAKF,YAAjF,CAA+F,QAAQ,KAAvG,EAFF,CADF,cAKE,oBAAC,IAAD,CAAM,KAAN,mBACE,oBAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,QAAnB,CAA4B,SAAS,CAAC,sCAAtC,EADF,CALF,cAQE,oBAAC,IAAD,CAAM,KAAN,mBACE,oBAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,OAAnB,CAA2B,SAAS,CAAC,sCAArC,EADF,CARF,CAFF,CADF,CATF,cA2BE,2BAAK,SAAS,CAAC,SAAf,EACG,KAAKL,KAAL,CAAWC,cAAX,cACC,yDAC2B,KAAKD,KAAL,CAAWyB,MADtC,CADD,CAIG,IALN,cAME,oBAAC,GAAD,mBACE,0BAAI,SAAS,CAAC,OAAd,EACG,KAAKzB,KAAL,CAAWC,cAAX,CAA4B0D,MAAM,CAACc,IAAP,CAAY,KAAKzE,KAAL,CAAWE,SAAvB,EAAkCwF,GAAlC,CAAsC,SAACzB,IAAD,qBACjE,0BAAI,GAAG,CAAEA,IAAT,EACGA,IADH,KAGG,GAHH,CAIG,MAAI,CAACjE,KAAL,CAAWE,SAAX,CAAqB+D,IAArB,CAJH,CADiE,EAAtC,CAA5B,CAOI,IARP,CADF,CAWG,KAAKjE,KAAL,CAAWC,cAAX,cAA4B,oBAAC,MAAD,EAAQ,SAAS,CAAC,sBAAlB,CAAyC,OAAO,CAAE,KAAKS,cAAvD,oDAA5B,CAA8J,IAXjK,CANF,CA3BF,CADF,CAqDD,C,yBA/TuBrB,S,EAkU1B;AACA,GAAMsG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAC3F,KAAD,QAAY,CAClCuF,IAAI,CAAEvF,KAAK,CAACuF,IADsB,CAAZ,EAAxB,CAIA;AACA,GAAMK,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,QAAe,CACxCC,MAAM,CAAE,gBAACC,KAAD,QAAWF,CAAAA,QAAQ,CAAC,CAACG,IAAI,CAAE,QAAP,CAAiB9E,IAAI,CAAE6E,KAAvB,CAAD,CAAnB,EADgC,CAAf,EAA3B,CAKA,cAAe5G,CAAAA,UAAU,CAACQ,OAAO,CAACgG,eAAD,CAAkBC,kBAAlB,CAAP,CAA6C9F,WAA7C,CAAD,CAAzB","sourcesContent":["import {withRouter} from 'react-router-dom';\r\nimport React, {Component} from 'react';\r\nimport {\r\n  Card, Form, Button, Alert, Row,\r\n} from 'react-bootstrap';\r\nimport {connect} from 'react-redux';\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\n\r\nconst spotify = new SpotifyWebApi();\r\n\r\n\r\nclass SpotifyForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {resultReceived: false, recOutput: {}, errorStatus: undefined};\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.processResults = this.processResults.bind(this);\r\n    this.getRecs = this.getRecs.bind(this);\r\n    this.createPlaylist = this.createPlaylist.bind(this);\r\n    this.countTracks = this.countTracks.bind(this);\r\n    this.getRandomTrack = this.getRandomTrack.bind(this);\r\n  }\r\n\r\n  /**\r\n     * Handle change in the artist value\r\n     * @param {Object} event Event incurred by change\r\n     */\r\n  handleChange(event) {\r\n    this.setState({resultReceived: false, alert: undefined});\r\n    const {target} = event;\r\n    const {value} = target;\r\n    const {name} = target;\r\n    this.setState({[name]: value});\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n     * Handle HTTP errors encountered by updating the state with an error message\r\n     * @param {Object} err\r\n     */\r\n  async handleError(err) {\r\n    switch (err.status) {\r\n      case 401:\r\n        this.setState({errorStatus: 'You don\\'t seem to be authorized. Try clicking the button above to authorize with Spotify and try again.', resultReceived: false});\r\n        break;\r\n      case 429:\r\n        this.setState({errorStatus: 'Looks like we\\'re making too many requests to Spotify right now. Wait a little bit and try that again.'});\r\n        break;\r\n      case 501:\r\n        this.setState({errorStatus: 'Spotify\\'s servers are fried! Check out their status, then try again when they\\'re back up'});\r\n        break;\r\n      default:\r\n        console.log(err);\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Checks whether a playlist contains is valid. Criteria for validity are:\r\n     *  - playlist attributes are well-defined (no null properties)\r\n     *  - playlist must contain the artist for which user is searching\r\n     * @param {string} id ID of playlist\r\n     * @param {*} artist Name of artist\r\n     * @return {Promise<boolean>} true if playlist is valid, false otherwise\r\n     */\r\n  async isPlaylistValid(id, artist) {\r\n    return spotify.getPlaylistTracks(id)\r\n        .then(\r\n            (pt) => {\r\n              if (pt === undefined) {\r\n                return;\r\n              }\r\n              for (const track of pt.items) {\r\n                if (track === undefined || track.track === null) {\r\n                  continue;\r\n                } else if (track.track.artists[0].name === artist) {\r\n                  return true;\r\n                }\r\n              }\r\n              return false;\r\n            },\r\n        );\r\n  }\r\n\r\n  /**\r\n     * Asynchronously counts tracks by a given artist in a given playlist\r\n     * @param {string} id ID of the playlist\r\n     * @param {string} name Name of the artist\r\n     * @param {object} output Reference to output object which should be modified\r\n     * @return {Promise}\r\n     */\r\n  async countTracks(id, name, output) {\r\n    const MAX_SONGS = 200;\r\n    return spotify.getPlaylistTracks(id).then(\r\n        (pt) => {\r\n          let curSongs = 0;\r\n          for (const track of pt.items) {\r\n            if (curSongs > MAX_SONGS) break;\r\n            if (track.track != null &&\r\n                        track.track.artists[0].name !== name &&\r\n                        track.track.artists[0].name !== '') {\r\n              if (track.track.artists[0].name in output) {\r\n                output[track.track.artists[0].name]++;\r\n              } else {\r\n                output[track.track.artists[0].name] = 1;\r\n              }\r\n            }\r\n            curSongs++;\r\n          }\r\n        },\r\n    ).catch((err) => {\r\n        if (err.status === 429) {\r\n            setTimeout(this.countTracks(id, name, output), 500);\r\n        } \r\n        this.handleError(err)\r\n    });\r\n  }\r\n\r\n  /**\r\n     * Gets recommendations for a specific artist and outputs recOutput value in state\r\n     * @param {string} name The name of the artist\r\n     * @return {Promise}\r\n     * /\r\n    * */\r\n  async getRecs(name) {\r\n    debugger;\r\n    const output = {};\r\n\r\n    const promises = [];\r\n    await spotify.searchPlaylists(name, {limit: 1})\r\n        .then(async (searchTotal) => await spotify.searchPlaylists(name, {limit: 50, offset: Math.floor(Math.random() * (searchTotal.playlists.total / 50))}).then(\r\n            (res) => {\r\n              for (const i of res.playlists.items) {\r\n                promises.push(this.isPlaylistValid(i.id, name)\r\n                    .then((valid) => (valid ? this.countTracks(i.id, name, output) : null)));\r\n              }\r\n            },\r\n        )).catch((err) => {\r\n                this.handleError(err)\r\n        });\r\n\r\n    return Promise.all(promises).then(() => this.setState({recOutput: this.processResults(output), artist: name}));\r\n  }\r\n\r\n  /**\r\n     * Processesresults from our query to spotify, removing entries beyond a certain threshhold then sorting the object.\r\n     * @return Results\r\n     */\r\n  processResults(input) {\r\n    const processed = {};\r\n    for (const key in input) {\r\n      if (input[key] > 10) {\r\n        processed[key] = input[key];\r\n      }\r\n    }\r\n    const sorted = Object.fromEntries(\r\n        Object.entries(processed).sort(([, a], [, b]) => b - a),\r\n    );\r\n    return sorted;\r\n  }\r\n\r\n\r\n  getRandomTrack(band) {\r\n    return spotify.searchTracks(band, {limit: 1})\r\n        .then((searchTotal) => spotify.searchTracks(band, {limit: 50}))\r\n        .then(\r\n            (tracks) => {\r\n              if (tracks === undefined || tracks.tracks === null) {\r\n                  return this.getRandomTrack(band);\r\n              }\r\n              // filter so we only get songs by the artist\r\n              let filteredByBand = tracks.tracks.items.filter(song =>\r\n                song.artists[0] = band\r\n              )\r\n              console.log('filtered: ');\r\n              console.log(filteredByBand);\r\n              console.log('regular: ');\r\n              console.log(tracks);\r\n              return filteredByBand[Math.floor(Math.random() * filteredByBand.length)];\r\n            },\r\n        ).catch(err => { \r\n            \r\n            if (err.status === 429) {\r\n                setTimeout(() => console.log(\"waiting to prevent 429...\"), 500)\r\n                return this.getRandomTrack(band)\r\n            } else {\r\n                this.handleError(err);\r\n            } \r\n            \r\n             \r\n        })\r\n  }\r\n\r\n  /**\r\n     * Creates playlist with one random song from each output artist\r\n     */\r\n  createPlaylist() {\r\n    debugger;\r\n    const promises = [];\r\n    const trackUris = [];\r\n\r\n    Object.keys(this.state.recOutput).forEach(async (artist) => {\r\n      promises.push(\r\n              this.getRandomTrack(artist)\r\n              .then((track) => trackUris.push(track.uri))\r\n              .catch((err) => this.handleError(err)\r\n      ));\r\n    });\r\n\r\n    // this.setState({playlistUrl: playlist.external_urls[\"spotify\"]})\r\n    Promise.all(promises).then(() => {\r\n      if (this.state.errorStatus === undefined) {\r\n        const addPromises = [];\r\n        spotify.getMe()\r\n            .then((me) => spotify.createPlaylist(me.id, {name: `Recommendations Based on  ${this.state.artist}`, public: false}))\r\n            .then((playlist) => {\r\n              trackUris.forEach(\r\n                  (uri) => addPromises.push(\r\n                      spotify.addTracksToPlaylist(playlist.id, [uri])\r\n                      .catch(err => {\r\n                        if (err.status === 429) {\r\n                            setTimeout(() => console.log(\"waiting to prevent 429...\"), 500)\r\n                            return spotify.addTracksToPlaylist(playlist.id, [uri]);\r\n                        } else {\r\n                            this.handleError(err);\r\n                        }\r\n                        \r\n                      })\r\n                      \r\n                    )\r\n              );\r\n              this.setState({playlistUrl: playlist.external_urls.spotify});\r\n            });\r\n        Promise.all(addPromises).then(() => this.setState({alert: 'Playlist created! Click below to open it up. Enjoy :)'}));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n     *  Handles submission of Artist form\r\n     * @param {Object} e Submission event\r\n     * TODO: Error handling\r\n     */\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    spotify.setAccessToken(this.props.vars.token);\r\n    this.setState({errorStatus: undefined, alert: undefined});\r\n    console.log(this.state);\r\n    spotify.searchArtists(this.state.artist)\r\n        .then(async (res) => await this.getRecs(res.artists.items[0].name))\r\n        .then(() => {\r\n        // Only show recommendations if they're non empty\r\n          if (this.state.errorStatus === undefined) {\r\n            if (Object.keys(this.state.recOutput).length === 0) {\r\n              this.setState(\r\n                  {errorStatus: 'Unfortunately, we could not find any recommendations for that artist at this time. Feel free to try another one, or try again since recommendations are randomly generated.'},\r\n              );\r\n            } else {\r\n              this.setState({resultReceived: true});\r\n            }\r\n          }\r\n        })\r\n        .catch((err) => {\r\n            if (err.status === 429) {\r\n                setTimeout(() => console.log(\"waiting to prevent 429...\"), 500)\r\n                return this.handleSubmit(e);\r\n            } \r\n            this.handleError(err)}\r\n        );\r\n  }\r\n\r\n\r\n  /**\r\n     * Render the component\r\n     * @return JSX\r\n     */\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.alert !== undefined ? (\r\n          <Alert className=\"alert-success\">\r\n            {this.state.alert}\r\n            <br />\r\n            <a href={this.state.playlistUrl}>{this.state.playlistUrl}</a>\r\n          </Alert>\r\n        ) : null }\r\n        {this.state.errorStatus !== undefined ? <Alert className=\"alert-danger\">{this.state.errorStatus}</Alert> : null }\r\n        <Card>\r\n          <Card.Body>\r\n            <Card.Title>Enter artist's name for recommendations</Card.Title>\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <Form.Group>\r\n                <Form.Label>Artist</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Iron Maiden\" name=\"artist\" onChange={this.handleChange} required />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Control type=\"submit\" className=\"bg-primary text-light col-8 offset-2\" />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Control type=\"reset\" className=\"bg-primary text-light col-8 offset-2\" />\r\n              </Form.Group>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n\r\n        <div className=\"d-block\">\r\n          {this.state.resultReceived ? (\r\n            <h4>\r\n              Recommended Artists for {this.state.artist}\r\n            </h4>\r\n          ) : null }\r\n          <Row>\r\n            <ul className=\"col-6\">\r\n              {this.state.resultReceived ? Object.keys(this.state.recOutput).map((band) => (\r\n                <li key={band}>\r\n                  {band}\r\n                  :\r\n                  {' '}\r\n                  {this.state.recOutput[band]}\r\n                </li>\r\n              )) : null }\r\n            </ul>\r\n            {this.state.resultReceived ? <Button className=\"mt-3 col-6 h-50 w-50\" onClick={this.createPlaylist}>Create a playlist with songs from these artists</Button> : null}\r\n          </Row>\r\n        </div>\r\n\r\n      </>\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\n// mapping our redux state to box props\r\nconst mapStateToProps = (state) => ({\r\n  vars: state.vars,\r\n});\r\n\r\n// mapping the dispatches from our reducer to box props\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  change: (vName) => dispatch({type: 'CHANGE', name: vName}),\r\n\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SpotifyForm));\r\n"]},"metadata":{},"sourceType":"module"}