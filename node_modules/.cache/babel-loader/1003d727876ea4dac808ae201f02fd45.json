{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rudiejd\\\\Documents\\\\crowdrec\\\\app\\\\src\\\\components\\\\SpotifyForm.js\";\nimport { withRouter } from 'react-router-dom';\nimport React, { Component } from 'react';\nimport { Card, Form, Button } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport SpotifyWebApi from 'spotify-web-api-js';\nvar spotify = new SpotifyWebApi();\n\nclass SpotifyForm extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    const Styles = styled.div``;\n    console.log(this.props.vars.token);\n    spotify.setAccessToken(this.props.vars.token);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.props.change({\n      name: name,\n      value: value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    spotify.getArtistAlbums('43ZHCT0cAZBISjO8DG9PnE', function (err, data) {\n      if (err) console.error(err);else console.log('Artist albums', data);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, \"Enter artist's name for recommendations\"), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }, \"Artist\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Artist\",\n      name: \"artist\",\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"submit\",\n      className: \"bg-primary text-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    })))));\n  }\n\n} // mapping our redux state to box props\n\n\nconst mapStateToProps = state => {\n  return {\n    vars: state.vars\n  };\n}; // mapping the dispatches from our reducer to box props \n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    change: vName => dispatch({\n      type: 'CHANGE',\n      name: vName\n    })\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SpotifyForm));","map":{"version":3,"sources":["C:/Users/rudiejd/Documents/crowdrec/app/src/components/SpotifyForm.js"],"names":["withRouter","React","Component","Card","Form","Button","styled","connect","SpotifyWebApi","spotify","SpotifyForm","constructor","props","handleChange","bind","handleSubmit","Styles","div","console","log","vars","token","setAccessToken","event","target","value","name","change","e","preventDefault","getArtistAlbums","err","data","error","render","mapStateToProps","state","mapDispatchToProps","dispatch","vName","type"],"mappings":"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","sourcesContent":["import { withRouter } from 'react-router-dom';\r\nimport React, { Component } from 'react';\r\nimport { Card, Form, Button} from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport {connect} from 'react-redux';\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\n\r\nvar spotify = new SpotifyWebApi();\r\n\r\n\r\nclass SpotifyForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        const Styles = styled.div``;\r\n        console.log(this.props.vars.token);\r\n        spotify.setAccessToken(this.props.vars.token);\r\n\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        this.props.change({name: name, value: value});\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        spotify.getArtistAlbums('43ZHCT0cAZBISjO8DG9PnE', function (err, data) {\r\n            if (err) console.error(err);\r\n            else console.log('Artist albums', data);\r\n          });\r\n    }\r\n\r\n\r\n    render() { return (\r\n        <Card>\r\n            <Card.Body>\r\n                <Card.Title>Enter artist's name for recommendations</Card.Title>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Form.Group>\r\n                        <Form.Label>Artist</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Artist\"  name=\"artist\" onChange={this.handleChange} required></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Control type=\"submit\" className=\"bg-primary text-light\">\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n    }\r\n}\r\n\r\n// mapping our redux state to box props\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      vars:state.vars\r\n    }\r\n  };\r\n  \r\n  // mapping the dispatches from our reducer to box props \r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      change: (vName) => dispatch( {type: 'CHANGE', name: vName} ),\r\n  \r\n    }\r\n  \r\n  }\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SpotifyForm));"]},"metadata":{},"sourceType":"module"}