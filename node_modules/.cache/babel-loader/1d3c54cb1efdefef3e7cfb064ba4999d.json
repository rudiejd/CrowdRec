{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rudiejd\\\\Documents\\\\crowdrec\\\\app\\\\src\\\\components\\\\SpotifyAuth.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nexport const authEndpoint = 'https://accounts.spotify.com/authorize';\n\nclass SpotifyAuth extends Component {\n  constructor(props) {\n    super(props);\n    this.getHashParams = window.location.hash.substring(1).split('&').reduce(function (initial, item) {\n      if (item) {\n        var parts = item.split('=');\n        initial[parts[0]] = decodeURIComponent(parts[1]);\n      }\n\n      return initial;\n    }, {});\n    this.state = {\n      isAuthenticatedWithSpotify: false // menu: this.props.userId.menu\n\n    };\n    this.state.handleRedirect = this.handleRedirect.bind(this);\n  }\n\n  generateRandomString(length) {\n    let text = '';\n    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    for (let i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n\n    return text;\n  }\n\n  componentDidMount() {\n    const params = this.getHashParams();\n    const access_token = params.access_token;\n    const state = params.state;\n    const storedState = localStorage.getItem('stateKey');\n    localStorage.setItem('spotifyAuthToken', access_token);\n    localStorage.getItem('spotifyAuthToken');\n\n    if (window.localStorage.getItem('authToken')) {\n      this.setState({\n        isAuthenticatedWithSpotify: true\n      });\n      console.log(window.localStorage.getItem('authToken'));\n    }\n\n    if (access_token && (state == null || state !== storedState)) {\n      alert('Click \"ok\" to finish authentication with Spotify');\n    } else {\n      localStorage.removeItem('stateKey');\n    } // handle token\n\n\n    console.log(storedState);\n  }\n\n  handleRedirect(event) {\n    event.preventDefault();\n    const params = this.getHashParams();\n    const access_token = params.access_token;\n    const state = this.generateRandomString(16);\n    localStorage.setItem('stateKey', state);\n    let url = 'https://accounts.spotify.com/authorize' + '?response_type=code' + '&client_id=3f31f6d13b974219a7093698a47d76f9' + '&scope=' + encodeURIComponent('user-read-private%20user-read-email') + '&redirect_uri=' + encodeURIComponent('http://localhost:3000');\n    window.location = url;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Button, {\n      className: \"sp_button\",\n      onClick: event => this.handleRedirect(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, \"Link spotify to get started\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    vars: state.vars\n  };\n}; // mapping the dispatches from our reducer to box props \n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    change: vName => dispatch({\n      type: 'CHANGE',\n      name: vName\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SpotifyAuth);","map":{"version":3,"sources":["C:/Users/rudiejd/Documents/crowdrec/app/src/components/SpotifyAuth.js"],"names":["React","Component","Button","connect","authEndpoint","SpotifyAuth","constructor","props","getHashParams","window","location","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","state","isAuthenticatedWithSpotify","handleRedirect","bind","generateRandomString","length","text","possible","i","charAt","Math","floor","random","componentDidMount","params","access_token","storedState","localStorage","getItem","setItem","setState","console","log","alert","removeItem","event","preventDefault","url","encodeURIComponent","render","mapStateToProps","vars","mapDispatchToProps","dispatch","change","vName","type","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Button} from 'react-bootstrap';\r\nimport {connect} from 'react-redux';\r\n\r\nexport const authEndpoint = 'https://accounts.spotify.com/authorize';\r\nclass SpotifyAuth extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isAuthenticatedWithSpotify: false\r\n      // menu: this.props.userId.menu\r\n    };\r\n    this.state.handleRedirect = this.handleRedirect.bind(this);\r\n  }\r\n\r\n  generateRandomString(length) {\r\n    let text = '';\r\n    const possible =\r\n      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    for (let i = 0; i < length; i++) {\r\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text;\r\n  }\r\n\r\n  getHashParams = \r\n    window.location.hash\r\n    .substring(1)\r\n    .split('&')\r\n    .reduce(function (initial, item) {\r\n      if (item) {\r\n        var parts = item.split('=');\r\n        initial[parts[0]] = decodeURIComponent(parts[1]);\r\n      }\r\n      return initial;\r\n    }, {});\r\n  \r\n\r\n  componentDidMount() {\r\n    const params = this.getHashParams();\r\n\r\n    const access_token = params.access_token;\r\n    const state = params.state;\r\n    const storedState = localStorage.getItem('stateKey');\r\n    localStorage.setItem('spotifyAuthToken', access_token);\r\n    localStorage.getItem('spotifyAuthToken');\r\n\r\n    if (window.localStorage.getItem('authToken')) {\r\n      this.setState({ isAuthenticatedWithSpotify: true });\r\n      console.log(window.localStorage.getItem('authToken'));\r\n    }\r\n    if (access_token && (state == null || state !== storedState)) {\r\n      alert('Click \"ok\" to finish authentication with Spotify');\r\n    } else {\r\n      localStorage.removeItem('stateKey');\r\n    }\r\n    // handle token\r\n    console.log(storedState);\r\n    \r\n    \r\n  }\r\n\r\n  handleRedirect(event) {\r\n    event.preventDefault();\r\n\r\n    const params = this.getHashParams();\r\n    const access_token = params.access_token;\r\n    \r\n\r\n    const state = this.generateRandomString(16);\r\n    localStorage.setItem('stateKey', state);\r\n\r\n    let url =\r\n      'https://accounts.spotify.com/authorize' +    \r\n      '?response_type=code' +\r\n      '&client_id=3f31f6d13b974219a7093698a47d76f9' +\r\n      '&scope=' +\r\n      encodeURIComponent('user-read-private%20user-read-email') +\r\n      '&redirect_uri=' +\r\n      encodeURIComponent('http://localhost:3000');\r\n    window.location = url;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n        <Button className=\"sp_button\" onClick={(event) => this.handleRedirect(event)} >\r\n          Link spotify to get started\r\n        </Button>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      vars:state.vars\r\n    }\r\n  };\r\n  \r\n  // mapping the dispatches from our reducer to box props \r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      change: (vName) => dispatch( {type: 'CHANGE', name: vName} ),\r\n  \r\n    }\r\n  \r\n  }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SpotifyAuth);"]},"metadata":{},"sourceType":"module"}