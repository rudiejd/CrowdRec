{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rudiejd\\\\Documents\\\\crowdrec\\\\app\\\\src\\\\Home.js\";\nimport React from 'react';\nimport { Output } from './components/Output';\nimport SpotifyForm from './components/SpotifyForm';\nimport SpotifyAuth from './components/SpotifyAuth';\nimport { useSelector } from 'react-redux';\nimport { Col, Row, Jumbotron, Container } from 'react-bootstrap';\nexport const Home = () => {\n  const out = useSelector(state => state.vars.recOutput);\n\n  if (out !== undefined) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(Jumbotron, {\n      className: \"text-justify\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"display-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 25\n      }\n    }, \"Crowd-sourced Spotify recommendations\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 25\n      }\n    }, \"Unsatisfied with your spotify recommendations? I was too; that's why I made this website. This site delivers recommendations based on\", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 29\n      }\n    }, \" playlist adjacency\"), \" above all. That is, I give you a set of new artists who appear in playlists with a given artist at a high frequency, all ranked by the number of times they are in the same playlists as the artist you entered.\"), /*#__PURE__*/React.createElement(SpotifyAuth, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: 6,\n      className: \"offset-lg-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(SpotifyForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Output, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }))));\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(Jumbotron, {\n      className: \"text-justify\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"display-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    }, \"Crowd-sourced Spotify recommendations\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }\n    }, \"Unsatisfied with your spotify recommendations? I was too; that's why I made this website. This site delivers recommendations based on\", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }\n    }, \" playlist adjacency\"), \" above all. That is, I give you a set of new artists who appear in playlists with a given artist at a high frequency, all ranked by the number of times they are in the same playlists as the artist you entered.\"), /*#__PURE__*/React.createElement(SpotifyAuth, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: 6,\n      className: \"offset-lg-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(SpotifyForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    })))));\n  }\n};","map":{"version":3,"sources":["C:/Users/rudiejd/Documents/crowdrec/app/src/Home.js"],"names":["React","Output","SpotifyForm","SpotifyAuth","useSelector","Col","Row","Jumbotron","Container","Home","out","state","vars","recOutput","undefined"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,qBAArB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAGA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,EAA8BC,SAA9B,QAA+C,iBAA/C;AACA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAClB,QAAMC,GAAG,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,SAArB,CAAvB;;AACA,MAAIH,GAAG,KAAKI,SAAZ,EAAuB;AACnB,wBAAO,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6JACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,sNAFJ,eAMI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ,CADG,eAWP,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,SAAS,EAAC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CAFJ,eAQI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CARJ,CAXO,CAAP;AAwBH,GAzBD,MAyBO;AACH,wBAAO,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6JACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,sNAFJ,eAMI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ,CADG,eAWP,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,SAAS,EAAC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CAFJ,CAXO,CAAP;AAqBH;AACP,CAlDK","sourcesContent":["import React from 'react'\r\nimport {Output} from './components/Output';\r\nimport SpotifyForm from './components/SpotifyForm';\r\nimport SpotifyAuth from './components/SpotifyAuth';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nimport { Col, Row, Jumbotron, Container } from 'react-bootstrap';\r\nexport const Home = () => {\r\n        const out = useSelector(state => state.vars.recOutput);   \r\n        if (out !== undefined) {\r\n            return <React.Fragment>\r\n                <Jumbotron className=\"text-justify\">\r\n                    <Container>\r\n                        <h1 className=\"display-4\">Crowd-sourced Spotify recommendations</h1>\r\n                        <p>Unsatisfied with your spotify recommendations? I was too; that's why I made this website. This site delivers recommendations based on \r\n                            <b> playlist adjacency</b> above all. That is, I give you a set of new artists who appear in playlists with a given artist at a high frequency,\r\n                            all ranked by the number of times they are in the same playlists as the artist you entered. \r\n                        </p>\r\n                        <SpotifyAuth></SpotifyAuth>\r\n                    </Container>\r\n                </Jumbotron>\r\n            <Container fluid>\r\n                \r\n                <Row>\r\n                    <Col lg={6} className=\"offset-lg-3\">\r\n                        \r\n                        <SpotifyForm></SpotifyForm>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Output></Output>\r\n                </Row>\r\n            </Container>\r\n            </React.Fragment>\r\n        } else {\r\n            return <React.Fragment>\r\n                <Jumbotron className=\"text-justify\">\r\n                    <Container>\r\n                        <h1 className=\"display-4\">Crowd-sourced Spotify recommendations</h1>\r\n                        <p>Unsatisfied with your spotify recommendations? I was too; that's why I made this website. This site delivers recommendations based on \r\n                            <b> playlist adjacency</b> above all. That is, I give you a set of new artists who appear in playlists with a given artist at a high frequency,\r\n                            all ranked by the number of times they are in the same playlists as the artist you entered. \r\n                        </p>\r\n                        <SpotifyAuth></SpotifyAuth>\r\n                    </Container>\r\n                </Jumbotron>\r\n            <Container fluid>\r\n                \r\n                <Row>\r\n                    <Col lg={6} className=\"offset-lg-3\">\r\n                        \r\n                        <SpotifyForm></SpotifyForm>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            </React.Fragment>\r\n        }\r\n }\r\n        \r\n"]},"metadata":{},"sourceType":"module"}