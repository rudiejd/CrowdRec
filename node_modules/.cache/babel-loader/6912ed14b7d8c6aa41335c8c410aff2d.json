{"ast":null,"code":"var _jsxFileName = \"/home/jd/git/CrowdRec/src/components/BandPaginator.js\";\nimport React, { Component } from 'react';\nimport Pagination from 'react-bootstrap/Pagination';\nimport { withRouter } from 'react-router-dom';\nimport { Card } from 'react-bootstrap';\nimport { connect } from 'react-redux';\n\nclass BandPaginator extends Component {\n  constructor(props) {\n    super(props);\n    let elements = [];\n    let pages = [];\n    this.state = {\n      page: 1,\n      pgs: pages,\n      elems: elements\n    };\n\n    for (let i = 0; i < this.props.bands.length; i++) {\n      elements.push( /*#__PURE__*/React.createElement(Card, {\n        value: this.props.bands[i],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 27\n        }\n      }));\n\n      if (i % 5 === 0) {\n        pages.push( /*#__PURE__*/React.createElement(Pagination.Item, {\n          key: i / 5 + 1,\n          onClick: this.setState({\n            page: i / 5 + 1\n          }),\n          active: this.state.page === i / 5 + 1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 28\n          }\n        }, i / 5 + 1));\n      }\n    }\n\n    this.setState({\n      pgs: pages,\n      elems: elements\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragement, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, this.state.elems.slice(this.state.page * 5, (this.state.page + 1) * 5), this.state.pgs);\n  }\n\n} // mapping our redux state to box props\n\n\nconst mapStateToProps = state => ({\n  vars: state.vars\n}); // mapping the dispatches from our reducer to box props\n\n\nconst mapDispatchToProps = dispatch => ({\n  change: vName => dispatch({\n    type: 'CHANGE',\n    name: vName\n  })\n});\n\nexport default BandPaginator;","map":{"version":3,"sources":["/home/jd/git/CrowdRec/src/components/BandPaginator.js"],"names":["React","Component","Pagination","withRouter","Card","connect","BandPaginator","constructor","props","elements","pages","state","page","pgs","elems","i","bands","length","push","setState","render","slice","mapStateToProps","vars","mapDispatchToProps","dispatch","change","vName","type","name"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SACEC,IADF,QAEO,iBAFP;AAGA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,aAAN,SAA4BL,SAA5B,CAAsC;AAClCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,KAAK,GAAG,EAAZ;AACA,SAAKC,KAAL,GAAc;AAACC,MAAAA,IAAI,EAAE,CAAP;AAAUC,MAAAA,GAAG,EAAEH,KAAf;AAAsBI,MAAAA,KAAK,EAAEL;AAA7B,KAAd;;AACA,SAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKP,KAAL,CAAWQ,KAAX,CAAiBC,MAArC,EAA6CF,CAAC,EAA9C,EAAkD;AAC9CN,MAAAA,QAAQ,CAACS,IAAT,eAAc,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,KAAKV,KAAL,CAAWQ,KAAX,CAAiBD,CAAjB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;;AACA,UAAIA,CAAC,GAAG,CAAJ,KAAU,CAAd,EAAiB;AACbL,QAAAA,KAAK,CAACQ,IAAN,eAAW,oBAAC,UAAD,CAAY,IAAZ;AACP,UAAA,GAAG,EAAGH,CAAC,GAAG,CAAL,GAAU,CADR;AAEP,UAAA,OAAO,EAAE,KAAKI,QAAL,CAAc;AAACP,YAAAA,IAAI,EAAEG,CAAC,GAAI,CAAL,GAAU;AAAjB,WAAd,CAFF;AAGP,UAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWC,IAAX,KAAoBG,CAAC,GAAI,CAAL,GAAU,CAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGoCA,CAAC,GAAG,CAAL,GAAU,CAH7C,CAAX;AAIH;AACJ;;AACD,SAAKI,QAAL,CAAc;AAACN,MAAAA,GAAG,EAAEH,KAAN;AAAaI,MAAAA,KAAK,EAAEL;AAApB,KAAd;AAEH;;AAEDW,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKT,KAAL,CAAWG,KAAX,CAAiBO,KAAjB,CAAuB,KAAKV,KAAL,CAAWC,IAAX,GAAgB,CAAvC,EAA0C,CAAC,KAAKD,KAAL,CAAWC,IAAX,GAAgB,CAAjB,IAAoB,CAA9D,CADL,EAEK,KAAKD,KAAL,CAAWE,GAFhB,CADJ;AAMH;;AA1BiC,C,CA6BtC;;;AACA,MAAMS,eAAe,GAAIX,KAAD,KAAY;AAClCY,EAAAA,IAAI,EAAEZ,KAAK,CAACY;AADsB,CAAZ,CAAxB,C,CAIA;;;AACA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCC,EAAAA,MAAM,EAAGC,KAAD,IAAWF,QAAQ,CAAC;AAACG,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,IAAI,EAAEF;AAAvB,GAAD;AADa,CAAf,CAA3B;;AAKA,eAAerB,aAAf","sourcesContent":["import React, {Component} from 'react';\nimport Pagination from 'react-bootstrap/Pagination';\nimport {withRouter} from 'react-router-dom';\nimport {\n  Card\n} from 'react-bootstrap';\nimport {connect} from 'react-redux';\n\nclass BandPaginator extends Component {\n    constructor(props) {\n        super(props);\n        let elements = [];\n        let pages = [];\n        this.state = ({page: 1, pgs: pages, elems: elements});\n        for (let i = 0; i < this.props.bands.length; i++) {\n            elements.push(<Card value={this.props.bands[i]} />);    \n            if (i % 5 === 0) {\n                pages.push(<Pagination.Item \n                    key={(i / 5) + 1}\n                    onClick={this.setState({page: i / (5) + 1})} \n                    active={this.state.page === i / (5) + 1}>{(i / 5) + 1}</Pagination.Item>);\n            }\n        }\n        this.setState({pgs: pages, elems: elements});\n\n    }\n\n    render() {\n        return (\n            <React.Fragement>\n                {this.state.elems.slice(this.state.page*5, (this.state.page+1)*5)}\n                {this.state.pgs}\n            </React.Fragement>\n        )\n    }\n\n}\n// mapping our redux state to box props\nconst mapStateToProps = (state) => ({\n  vars: state.vars,\n});\n\n// mapping the dispatches from our reducer to box props\nconst mapDispatchToProps = (dispatch) => ({\n  change: (vName) => dispatch({type: 'CHANGE', name: vName}),\n\n});\n\nexport default BandPaginator; "]},"metadata":{},"sourceType":"module"}