{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rudiejd\\\\Documents\\\\crowdrec\\\\app\\\\src\\\\components\\\\SpotifyForm.js\";\nimport { withRouter } from 'react-router-dom';\nimport React, { Component } from 'react';\nimport { Card, Form, Button } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nvar client_id = '7d21fa61e53840f8a4ef4d0e1db754b3'; // Your client id\n\nvar client_secret = '171c1041af6d4c2d87e7adfcc6cc6ad1'; // Your secret\n\nclass SpotifyForm extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    const Styles = styled.div``;\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.props.change({\n      name,\n      value\n    });\n    console.log(this.props.vars);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    fetch('https://accounts.spotify.com/api/token', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': 'Basic ' + new Buffer(client_id + ':' + client_secret).toString('base64')\n      },\n      form: {\n        grant_type: 'client_credentials'\n      },\n      body: JSON.stringify({\n        firstParam: 'yourValue',\n        secondParam: 'yourOtherValue'\n      })\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \"Enter artist's name for recommendations\"), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, \"Artist\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Artist\",\n      name: \"artist\",\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"submit\",\n      className: \"bg-primary text-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    })))));\n  }\n\n} // mapping our redux state to box props\n\n\nconst mapStateToProps = state => {\n  return {\n    vars: state.vars\n  };\n}; // mapping the dispatches from our reducer to box props \n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    change: vName => dispatch({\n      type: 'CHANGE',\n      name: vName\n    })\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SpotifyForm));","map":{"version":3,"sources":["C:/Users/rudiejd/Documents/crowdrec/app/src/components/SpotifyForm.js"],"names":["withRouter","React","Component","Card","Form","Button","styled","connect","client_id","client_secret","SpotifyForm","constructor","props","handleChange","bind","handleSubmit","Styles","div","event","target","value","name","change","console","log","vars","e","preventDefault","fetch","method","headers","Buffer","toString","form","grant_type","body","JSON","stringify","firstParam","secondParam","render","mapStateToProps","state","mapDispatchToProps","dispatch","vName","type"],"mappings":"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","sourcesContent":["import { withRouter } from 'react-router-dom';\r\nimport React, { Component } from 'react';\r\nimport { Card, Form, Button} from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport {connect} from 'react-redux';\r\nvar client_id = '7d21fa61e53840f8a4ef4d0e1db754b3'; // Your client id\r\nvar client_secret = '171c1041af6d4c2d87e7adfcc6cc6ad1'; // Your secret\r\n\r\nclass SpotifyForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        const Styles = styled.div``;\r\n\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        this.props.change({name, value});\r\n        console.log(this.props.vars);\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        fetch('https://accounts.spotify.com/api/token', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Basic ' + (new Buffer(client_id + ':' + client_secret).toString('base64'))\r\n            },\r\n            form: {\r\n                grant_type: 'client_credentials',\r\n            },\r\n            body: JSON.stringify({\r\n                firstParam: 'yourValue',\r\n                secondParam: 'yourOtherValue',\r\n            })\r\n        });\r\n    }\r\n\r\n\r\n    render() { return (\r\n        <Card>\r\n            <Card.Body>\r\n                <Card.Title>Enter artist's name for recommendations</Card.Title>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Form.Group>\r\n                        <Form.Label>Artist</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Artist\"  name=\"artist\" onChange={this.handleChange} required></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Control type=\"submit\" className=\"bg-primary text-light\">\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n    }\r\n}\r\n\r\n// mapping our redux state to box props\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      vars:state.vars\r\n    }\r\n  };\r\n  \r\n  // mapping the dispatches from our reducer to box props \r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      change: (vName) => dispatch( {type: 'CHANGE', name: vName} ),\r\n  \r\n    }\r\n  \r\n  }\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SpotifyForm));"]},"metadata":{},"sourceType":"module"}